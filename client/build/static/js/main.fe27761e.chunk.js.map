{"version":3,"sources":["util/localstorage.js","components/Nav.jsx","components/About.jsx","util/cookies.js","util/djangoRequest.js","components/project/ProjectListElem.jsx","components/project/ProjectList.jsx","components/project/ProjectCollaboratorCard.jsx","util/slugify.js","components/project/ProjectNav.jsx","components/instrument/InstrumentHead.jsx","components/instrument/InstrumentCanvas.jsx","components/instrument/InstrumentContainer.jsx","components/instrument/InstrumentList.jsx","components/project/ProjectMain.jsx","util/initProject.js","components/project/ProjectView.jsx","components/user/UserList.jsx","components/user/UserView.jsx","components/user/UserCreateForm.jsx","components/user/UserLogin.jsx","components/Main.jsx","components/project/ProjectSidebar.jsx","components/SidebarLeft.jsx","components/SidebarRight.jsx","serviceWorker.js","index.js","App.js"],"names":["setLsByKey","_key_","_value_","localStorage","setItem","getLsObj","lsObj","includes","deleteLsObj","removeItem","Nav","loginObj","loggedIn","setLoggedIn","username","useState","search","setSearch","mouseOverPpl","setMouseOverPpl","onClickLogout","a","className","onSubmit","e","preventDefault","to","type","value","placeholder","onChange","newSearch","target","pathname","state","projectNavObj","onMouseEnter","onMouseLeave","onClick","About","getCookieByKey","key","cookieStr","document","cookie","returnVal","split","forEach","item","kvArr","trim","cookieKey","cookieValue","alert","_post","url","body","csrftoken","fetch","credentials","method","mode","headers","response","_put","token","JSON","stringify","_get","_delete","Post","PostJSON","json","responseJSON","Put","GetJSON","Delete","ProjectListElem","projectObj","user","name","project_slug","created_dt","dt","dtArr","date","time","formatDt","ProjectList","listElemArr","setListElemArr","buildListElemArr","resJSON","projectElemArr","map","idx","useEffect","ProjectCollaboratorCard","collaborators","collaboratorsArr","collaborator","slugify","string","p","RegExp","join","toString","toLowerCase","replace","c","charAt","indexOf","ProjectNav","projectNavProps","saveProps","projectSlug","projectUserObj","currentUserObj","save","setSave","showCollab","setShowCollab","toggleSED","setToggleSED","changeTitleBool","setChangeTitleBool","titleStr","setTitleStr","onClickSaveProject","requestBody","location","onSubmitChangeTitle","newTitle","currentTarget","console","log","onChangeChangeTitle","onBlur","autoFocus","length","InstrumentHead","style","display","flexFlow","justifyContent","alignItems","scaleObj","xScale","yScale","radiusScale","colorXScale","colorYScale","InstrumentCanvas","contentObj","midi","idProps","contentArr","updateProjectObjContent","notes","pianoRoll","idStr","instrumentArrIdx","newNotes","noteObj","x","y","stepStart","midinote","weight","duration","svgWidth","svgHeight","datumWidthPx","datumHeightPx","Math","floor","noteCt","pitchCt","notesArr","setNotesArr","canvasObj","setCanvasObj","updateCanvas","selectAll","remove","data","enter","append","attr","d","drawCanvas","_canvasElem_","svgCanvas","d3","domain","range","call","ticks","tickSize","tickFormat","scrollY","scrollTop","offsetTop","getBoundingClientRect","top","offsetLeft","left","leftCoord","pageX","topCoord","pageY","clickNoteObj","newNotesArr","filter","push","clickUpdateNotesArr","id","InstrumentContainer","instrumentObj","InstrumentList","instrumentArr","_instrumentArr_","instElemArr","buildInstrumentList","ProjectMain","projectMainProps","projectName","initProject","currentUsername","currentUserId","content","bpm","automation","timeSig","ProjectView","params","props","projectUsername","setProjectObj","projectMainObj","setProjectMainObj","resourceId","setAllProjectObjects","_json_","userId","newProjectMainObj","requestProjectById","resJson","newProject","newContentArr","UserList","UserView","userObj","setUserObj","requestUserByUsername","src","alt","projectElemsArr","renderProjectsArr","UserCreateForm","onSubmitSignup","formElemArr","formElem","buildInput","UserLogin","usernameState","setUsernameState","onSubmitLogin","formInput","password","httpStatus","status","jwt","errorStatus","msg","Main","exact","path","render","component","ProjectSidebar","sidebarElemArr","SidebarLeft","SidebarRight","Boolean","window","hostname","match","ReactDOM","initLsObj","setLsObj","checkLsObj","_lsObj_","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fe27761e.chunk.js","sourcesContent":["export const getLsByKey = (_key_) => {\n    localStorage.getItem(_key_);\n}\nexport const setLsByKey = (_key_, _value_) => {\n    localStorage.setItem(_key_, _value_);\n}\nexport const deleteLsKey = (_key_) => {\n    localStorage.removeItem(_key_);\n}\nexport const getLsObj = () => {\n    let lsObj = {}\n    for (let _key_ in localStorage) {\n        let _value_ = localStorage[_key_];\n        if (!['key', 'getItem', 'setItem', 'removeItem', 'clear', 'length'].includes(_key_)) {\n            lsObj[_key_] = _value_;\n        }\n    }\n    return lsObj\n}\nexport const setLsObj = (_lsObj_) => {\n    for (let _key_ in _lsObj_) {\n        setLsByKey(_key_, _lsObj_[_key_])\n    }\n}\nexport const deleteLsObj = () => {\n    for (let _key_ in localStorage) {\n        if (!['key', 'getItem', 'setItem', 'removeItem', 'clear', 'length'].includes(_key_)) {\n            localStorage.removeItem(_key_);\n        }\n    }\n}","// App.js > Nav.jsx\n\n// react\nimport React, {useState} from 'react';\nimport {Link, Redirect} from 'react-router-dom';\n\n// components\n\n// utility functions\nimport {deleteLsObj} from '../util/localstorage'\n\n// start\nexport default function Nav({loginObj, lsObj}){\n    // destructuring\n    const {loggedIn, setLoggedIn} = loginObj;\n    const {username} = lsObj;\n\n    // states\n    const [search, setSearch] = useState('');\n    const [mouseOverPpl, setMouseOverPpl] = useState(false);\n\n    // event handlers\n    const onSubmitSearch = (e) => {\n        e.preventDefault();\n        return <Redirect to={`search${search}`}></Redirect>\n    }\n    const onChangeSearch = (e) => {\n       let newSearch = e.target.value;\n       setSearch(newSearch);\n    }\n    const onClickLogout = async () => {\n        deleteLsObj()\n        setLoggedIn(() => false)\n    }\n    // render functions\n    const pplDropDown = () => {\n        return (\n            <div className=\"pplDropDown-card\">\n                <div className=\"logout\" onClick={onClickLogout} >Logout</div>\n            </div>\n        )\n    }\n    const buildProjectsProfilesLinks = () => {\n        let pplElem = (loggedIn) ? (\n            <div className=\"projects-profiles-links\">\n                <Link to={{pathname: `/project/active/`, state: {projectNavObj:{}}}} className=\"projects noselect\" >Create Project</Link>\n                <div className=\"login-profile noselect\" onMouseEnter={(e) => setMouseOverPpl(true)} onMouseLeave={(e) => setMouseOverPpl(false)}>\n                    <Link to={`/${username}/`} >{username}</Link>\n                    <div className=\"pplDropDown-container\">{mouseOverPpl && pplDropDown()}</div>\n                </div>\n            </div>\n        ):(\n            <div className=\"projects-profiles-links\">\n                <Link to={`/projects/`} className=\"projects noselect\" >{`Recent Projects`}</Link>\n                <Link to={`/login/`} className=\"login-profile noselect\" >{`Login / Register`}</Link>\n            </div>\n        );\n        return pplElem\n    }\n    // end\n    return(\n        <div className=\"Nav\">\n            <form className='search' onSubmit={onSubmitSearch}>\n                <input type=\"text\" className=\"searchbar\" value={search} placeholder='find projects/users' onChange={onChangeSearch} />\n            </form>\n            <Link to={loggedIn ? `/feed`: `/`}>\n                <div className=\"logo noselect\">\n                    <div className=\"left noselect\">Diff</div><div className=\"right noselect\">use</div>\n                </div>\n            </Link>\n            {buildProjectsProfilesLinks()}\n        </div>\n    )\n}","// App.js > Main.jsx > About.jsx\n\n// react\nimport React from 'react';\n\n// components\n\n// start\nexport default function About(){\n    return(\n        <div className=\"About\">\n            This is a little intro about the page\n        </div>\n    )\n}","export const getCookieByKey = (key) => {\n    let cookieStr = document.cookie\n    if (cookieStr && cookieStr !== '') {\n        let returnVal;\n        cookieStr.split(';').forEach((item) => {\n            let kvPair = item.trim();\n            let kvArr = kvPair.split('=');\n            let cookieKey = kvArr[0]\n            let cookieValue = kvArr[1]\n            if (key === cookieKey) {\n                returnVal = cookieValue.trim()\n            }\n        })\n        if (returnVal) {\n            return returnVal\n        } else {\n            alert('no return value!')\n        }\n    }\n}\nexport const getCookieObj = () => {\n    let cookieObj = {};\n    let cookieStr = document.cookie;\n    cookieStr.split(';').forEach((item) => {\n        let kvPair = item.trim();\n        let kvArr = kvPair.split('=');\n        if ((kvArr[1].length > 0) && !(['null', 'undefined'].includes(kvArr[1]))) {\n            cookieObj[kvArr[0]] = kvArr[1];\n        } else if (!cookieObj['diffuse_jwt'] && cookieObj['csrftoken']) {\n            document.cookie = `expires=Thu, 01 Jan 1970 00:00:00 GMT`;\n        } else {\n            document.cookie = `${kvArr[0]}=; expires=Thu, 01 Jan 1970 00:00:00 GMT`;\n        }\n    })\n    return cookieObj\n}\nexport const deleteCookie = (_key_) => {\n    if (document.cookie.split(';').filter((item) => item.trim().startsWith(_key_)).length) {\n        document.cookie = `${_key_}=; expires=0`;\n        document.cookie = `${_key_}=; expires=Thu, 01 Jan 1970 00:00:00 GMT`;\n    }\n}\nexport const createCookie = (_key_, _value_, _expiryMinutes_) => {\n    if (((_value_) && (typeof _value_ === typeof '' && (_value_.length > 0 || !(['null', 'undefined'].includes(_value_)))))) {\n        let expiryDt = new Date(+new Date() + _expiryMinutes_ * 60000);\n        document.cookie = `${_key_}=${_value_}; expires=${expiryDt}`;\n    }\n}","import {getCookieByKey} from './cookies';\n\nexport const _post = async (url, body) => {\n    let csrftoken = getCookieByKey(\"csrftoken\");\n    let response = await fetch(\n        url,\n        {\n            credentials: 'include',\n            method: 'POST',\n            mode: 'same-origin',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'X-CSRFToken': csrftoken,\n            },\n            body,\n        }\n    )\n    return response\n}\nexport const _put = async (url, body, token) => {\n    let csrftoken = getCookieByKey(\"csrftoken\");\n    body['Authorization'] = `Token ${token}`;\n    let response = await fetch(\n        url,\n        {\n            credentials: 'include',\n            method: 'PUT',\n            mode: 'same-origin',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'X-CSRFToken': csrftoken,\n                'Authorization': `Token ${token}`,\n            },\n            body: JSON.stringify(body),\n        }\n    )\n    return response\n}\nexport const _get = async (url, body) => {\n    let csrftoken;\n    let headers = {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n    }\n    if (body && body['diffuse_jwt']) {\n        csrftoken = getCookieByKey(\"csrftoken\");\n        headers['X-CSRFToken'] = csrftoken;\n    }\n    let response = await fetch(\n        url,\n        {\n            credentials: 'include',\n            method: 'GET',\n            mode: 'same-origin',\n            headers: headers,\n            body,\n        }\n    )\n    return response\n}\nexport const _delete = async (url, body, token) => {\n    let csrftoken = getCookieByKey(\"csrftoken\");\n    body['Authorization'] = `Token ${token}`;\n    let response = await fetch(\n        url,\n        {\n            credentials: 'include',\n            method: 'DELETE',\n            mode: 'same-origin',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'X-CSRFToken': csrftoken,\n                'Authorization': `Token ${token}`,\n            },\n            body: JSON.stringify(body),\n        }\n    )\n    return response\n}\n\nexport const Post = async (url, body) => {\n    let response = await _post(url, body);\n    return response\n}\nexport const PostJSON = async (url, body) => {\n    let response = await _post(url, body);\n    let responseJSON = await response.json();\n    return responseJSON\n}\nexport const Put = async (url, body, token) => {\n    let response = await _put(url, body, token);\n    return response\n}\nexport const PutJSON = async (url, body, token) => {\n    let response = await _put(url, body, token);\n    let responseJSON = await response.json();\n    return responseJSON\n}\nexport const Get = async (url, body) => {\n    let response = await _get(url, body);\n    return response;\n}\nexport const GetJSON = async (url, body) => {\n    let response = await _get(url, body);\n    let responseJSON = await response.json();\n    return responseJSON;\n}\nexport const Delete = async (url, body, token) => {\n    let response = await _delete(url, body, token);\n    return response;\n}\nexport const DeleteJSON = async (url, body, token) => {\n    let response = await _delete(url, body, token);\n    let responseJSON = await response.json();\n    return responseJSON;\n}","// App.js > Main.jsx > ProjectList.jsx > ProjectListElem.jsx\n\n// react\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\n// style\nimport './css/ProjectList.css';\n\n// components\n\n// start\nexport default function ProjectListElem({projectObj}){\n\n    // destructuring\n    const {user, name, project_slug, created_dt} = projectObj;\n\n    // global vars\n    let {username} = user;\n\n    const formatDt = (dt) => {\n        let dtStr = `${dt}`;\n        let dtArr = dtStr.split('T');\n        let [date, time] = dtArr;\n        time = time.split(':')\n        time = `${time[0]}:${time[1]}`\n        \n        let newDtStr = `${date} ${time}`;\n        return newDtStr\n    }\n    return(\n        <div className=\"ProjectListElem\" key={`PLE${project_slug}`} >\n            <div className=\"author\"><Link to={`/${username}/`}>{username}</Link></div>\n            <div className=\"name\"><Link to={`/${username}/${project_slug}/`}>{name}</Link></div>\n            <div className=\"date\">{created_dt && formatDt(created_dt)}</div>\n        </div>\n    )\n}","// App.js > Main.jsx > ProjectList.jsx\n\n// react\nimport React, {useState, useEffect} from 'react';\n\n// modules\n\n// style\nimport './css/ProjectList.css';\n\n// util\nimport {GetJSON} from '../../util/djangoRequest';\n\n// components\nimport ProjectListElem from './ProjectListElem';\n\n// start\nexport default function ProjectList(){\n    const [listElemArr, setListElemArr] = useState([])\n    const buildListElemArr = async () => {\n        let url = `/api/project/`;\n        let resJSON = await GetJSON(url);\n        let projectElemArr = resJSON.map((projectObj, idx) => {\n            return <ProjectListElem projectObj={projectObj} key={`ple-${idx}`} />\n        })\n        setListElemArr(projectElemArr)\n    }\n\n    useEffect(()=>{\n        buildListElemArr()\n    },[])\n    return(\n        <div className=\"ProjectList fade-in\">\n            {listElemArr}\n        </div>\n    )\n}","// App.js > ProjectList.jsx > ProjectListElem.jsx > ProjectCollaboratorCard.jsx\n\n// react\nimport React, {useState} from 'react';\nimport {Link} from 'react-router-dom';\n\n// style\nimport './css/ProjectCollaboratorCard.css';\n\n// components\n\n// start\nexport default function ProjectCollaboratorCard({projectNavObj}){\n    // destructuring\n    const {collaborators} = projectNavObj;\n\n    // states\n    const [collaboratorsArr] = useState(collaborators ? collaborators: [])\n\n    // functions\n    const buildCollaboratorList = () => {\n        return collaboratorsArr.map((collaborator, idx) => {\n            return(\n                <div className=\"collaborator\"  key={`collab-name-${idx}`}>\n                    <Link to={`/${collaborator['username']}/`}>{collaborator['username']}</Link>\n                </div>\n            )\n        })\n    }\n\n    return(\n        <div className=\"ProjectCollaboratorCard fade-in noselect\" key={`pcc--${projectNavObj['user']['username']-projectNavObj['project_slug']}`} >\n            <div className=\"title\">Add</div>\n            <div className=\"collaborator-container\">\n                {buildCollaboratorList(collaborators)}\n            </div>\n        </div>\n    )\n}","export const slugify = (string) => {\n    const a = 'àáâäæãåāăąçćčđďèéêëēėęěğǵḧîïíīįìłḿñńǹňôöòóœøōõőṕŕřßśšşșťțûüùúūǘůűųẃẍÿýžźż·/_,:;'\n    const b = 'aaaaaaaaaacccddeeeeeeeegghiiiiiilmnnnnoooooooooprrsssssttuuuuuuuuuwxyyzzz------'\n    const p = new RegExp(a.split('').join('|'), 'g')\n  \n    return string.toString().toLowerCase()\n        .replace(' ', '-') // Replace spaces with -\n        .replace(p, c => b.charAt(a.indexOf(c))) // Replace special characters\n        .replace('&', '-and-') // Replace & with 'and'\n        .replace(/\\W/g, '') // Remove all non-word characters\n        .replace('----', '-').replace('---', '-').replace('--', '-') // Replace multiple - with single -\n        .replace(/^-+/, '') // Trim - from start of text\n        .replace(/-+$/, '') // Trim - from end of text\n}","// App.js > Main.jsx > ProjectView.jsx > ProjectNav.jsx\n\n// react\nimport React, {useState} from 'react';\nimport {Link} from 'react-router-dom';\n\n// style\nimport './css/ProjectNav.css';\n\n// components\nimport ProjectCollaboratorCard from './ProjectCollaboratorCard';\n\n// util\nimport {getLsObj} from '../../util/localstorage';\nimport {Put, Post, Delete} from '../../util/djangoRequest';\nimport {slugify} from '../../util/slugify';\n\n// start\nexport default function ProjectNav({projectNavProps, saveProps, loggedIn}){\n    // destructuring variables\n    const {projectObj, projectSlug} = projectNavProps;\n    const projectUserObj = projectObj['user'];\n    const currentUserObj = {username: getLsObj()['username'], id: getLsObj()['user_id']}\n    const collaboratorsArr = projectObj['collaborators']\n    const {save, setSave} = saveProps;\n\n    // state\n    const [showCollab, setShowCollab] = useState(false)\n    const [toggleSED, setToggleSED] = useState(false)\n    const [changeTitleBool, setChangeTitleBool] = useState(false)\n    const [titleStr, setTitleStr] = useState(projectObj['name'] ? projectObj['name']: 'New Project')\n\n    // event handlers\n    const onClickSaveProject = async (e) => {\n        e.preventDefault();\n        let url = `/api/project/`;\n        let requestBody = {...projectObj};\n        requestBody['project_slug'] = slugify(projectObj['name']);\n        requestBody['resource_slug'] = slugify(`${projectObj['user']['username']}-${projectObj['name']}`);\n        delete requestBody['user'];\n        if (document.location.pathname === '/project/active/') {\n            await Post(url, JSON.stringify(requestBody));\n        } else {\n            url = `/api/project/${requestBody['resource_slug']}/`\n            delete requestBody['resource_slug']\n            await Put(url, requestBody, getLsObj()['diffuse_jwt']);\n        }\n    }\n    const onClicktoggleCollaboratorCard = () => {\n        setShowCollab(!showCollab)\n    }\n    const onClickChangeTitle = () => {\n        setChangeTitleBool(()=>{return true})\n    }\n    const onChangeChangeTitle = (e) => {\n        let newTitle = e.currentTarget.value\n        console.log(newTitle)\n        setTitleStr(() => {return newTitle})\n    }\n    const onSubmitChangeTitle = async (e) => {\n        e.preventDefault()\n\n        let requestBody = {...projectObj};\n        // save/partial update to database if its an existing project\n        if (collaboratorsArr) {\n            // on create project: create a project entry in database with name: \"untitled-${Date.now()}\"\n            // on click in title, open the form to allow for local editing\n            // on typing, update the content in the form locally\n            // on blur or submit, check if name is duplicate > show an alert\n            // on blur or submit, check if name is duplicate > revert to old name\n            // on successful submit update the project name, slug, and resourceId\n            let url = `/api/project/${requestBody['resource_slug']}/`\n            delete requestBody['resource_slug']\n            await Put(url, requestBody, getLsObj()['diffuse_jwt']);\n        }\n\n        // exit the input\n        setChangeTitleBool(()=>{return false})\n    }\n\n    // render fxns\n    const buildSaveEditDelete = () => {\n        return (\n            <div className=\"save-edit-delete-container noselect\" onClick={() => {setToggleSED(!toggleSED); setSave(() => !save)}} >\n                |||\n                {toggleSED ? (\n                    <div className=\"s-e-d-dropdown fade-in\" >\n                        <div className=\"save\" onClick={(e) => {onClickSaveProject(e)}} >Save</div>\n                        <div className=\"delete\" onClick={(e) => {Delete(e)}} >Delete</div>\n                    </div>\n                ): <div></div>\n                }\n            </div>\n        )\n    }\n    const buildCollaboratorCard = () => {\n        return (\n            // showCollab && <div className=\"collab-card fade-in noselect\"><ProjectCollaboratorCard projectNavObj={projectObj} /></div>\n            showCollab && <ProjectCollaboratorCard projectNavObj={projectObj} />\n        )\n    }\n    const buildTitleElem = () => {\n        return(\n            <div className=\"title\">{titleStr}</div>\n        )\n    }\n    const buildEditTitleElem = () => {\n        return(\n            <form onSubmit={e => {onSubmitChangeTitle(e)}}>\n                <input type=\"text\" className=\"title-edit\" value={titleStr} onChange={e => {onChangeChangeTitle(e)}} onBlur={e => {onSubmitChangeTitle(e)}} autoFocus />\n                <input type=\"submit\" className=\"title-edit-submit\" value='' />\n            </form>\n        )\n    }\n\n    // save, edit, {(view collaborators) + (add collaborator) + (collaborator count)}, {history + (history count)}\n    return(\n        <div className=\"ProjectNav\" >\n            <div className=\"title-container\" onClick={(e) => {loggedIn ? onClickChangeTitle(e): alert(\"Must be signed in to edit\")}} >{changeTitleBool ? buildEditTitleElem(): buildTitleElem()}</div>\n            <div className=\"sub-nav\">\n                <div className=\"creator\" ><Link to={`/${projectUserObj['username']}/`} >{projectUserObj['username']}</Link></div>\n                <div className=\"collaborate-history-container noselect\" >\n                    <div className=\"collab-link noselect\" onClick={() => {onClicktoggleCollaboratorCard()}} >\n                        {collaboratorsArr ?\n                            `${collaboratorsArr.length} Collaborator${(collaboratorsArr.length > 1) ? 's': ''}`:\n                            `Add Collaborators`\n                        }\n                        {buildCollaboratorCard()}\n                    </div>\n                    {\n                        <div className=\"history-link noselect\">\n                            <Link to={{pathname: `/${projectUserObj['username']}/${projectSlug}/history/`, state: {projectObj}}} >History</Link>\n                        </div>\n                    }\n                </div>\n                {projectUserObj['username'] === currentUserObj['username'] && buildSaveEditDelete()}\n            </div>\n        </div>\n    )\n}","// App.js > ProjectView.jsx > ProjectMain.jsx > InstrumentList.jsx > InstrumentContainer.jsx > InstrumentHead.jsx\n\n// react\nimport React from 'react';\n\n// style\nimport './css/InstrumentHead.css';\n\n// components\n\n// start\nexport default function InstrumentHead({name}){\n    /**@type {React.CSSProperties}*/\n    const instrumentStyling = {\n        display:'flex',\n        flexFlow:'row',\n        justifyContent:'center',\n        alignItems:'center',\n    }\n    return(\n        <div className=\"InstrumentHead\" style={instrumentStyling} >\n            {name}\n        </div>\n    )\n}","// App.js > ProjectView.jsx > ProjectMain.jsx > InstrumentList.jsx > InstrumentContainer.jsx > InstrumentCanvas.jsx\n\n// react\nimport React, {useState, useEffect} from 'react';\n\n// style\nimport './css/InstrumentCanvas.css';\n\n// modules\nimport * as d3 from 'd3';\n\n// components\nconst scaleObj = {\n    xScale: null, yScale: null, radiusScale: null, colorXScale: null, colorYScale: null,\n}\n// start\nexport default function InstrumentCanvas({contentObj, midi, idProps, save}){\n    // destructuring\n    const {contentArr, updateProjectObjContent} = contentObj; // removed projectname\n    const {pianoRoll} = midi;\n    const {notes} = pianoRoll;\n    const {idStr, instrumentArrIdx} = idProps;\n    // const {automation} = pianoRoll;\n\n    let newNotes = notes.map((noteObj) => {\n        let {x, y, stepStart, midinote, weight, duration} = noteObj\n        x = x ? x: stepStart;\n        y = y ? y: midinote;\n        weight = weight ? weight: 1;\n        duration = duration ? duration: 1;\n        return {x, y, weight, duration}\n    })\n\n    // state\n    const [svgWidth] = useState(1100);\n    const [svgHeight] = useState(1500);\n    const [datumWidthPx] = useState(20);\n    const [datumHeightPx] = useState(10);\n    const [noteCt] = useState(Math.floor(svgWidth / datumWidthPx));\n    const [pitchCt] = useState(Math.floor(svgHeight / datumHeightPx));\n    const [notesArr, setNotesArr] = useState([...newNotes]);\n    const [canvasObj, setCanvasObj] = useState();\n    // const [automationArr, setAutomationArr] = useState([...automation]);\n\n    // event listeners\n    const clickUpdateNotesArr = (e) => {\n        let scrollY = e.currentTarget.scrollTop;\n        let offsetTop = e.currentTarget.getBoundingClientRect().top;\n        let offsetLeft = e.currentTarget.getBoundingClientRect().left;\n        let clickLeft = e.pageX;\n        let clickTop = e.pageY;\n        \n        let leftCoord = clickLeft - offsetLeft;\n        let topCoord = scrollY + clickTop - offsetTop;\n\n        let xCoord = noteCt - Math.floor((svgWidth - leftCoord) / datumWidthPx);\n        let yCoord = 1 + Math.floor((svgHeight - topCoord) / datumHeightPx);\n        let clickNoteObj = {x: xCoord, y: yCoord, weight: 1, duration: 1};\n\n        // check if note exists (setting up var for conditions)\n        let newNotesArr = notesArr.filter((noteObj) => {\n            return !(\n                (clickNoteObj['x']        === noteObj['x']) &&\n                (clickNoteObj['y']        === noteObj['y']) &&\n                (clickNoteObj['weight']   === noteObj['weight']) &&\n                (clickNoteObj['duration'] === noteObj['duration'])\n            )\n        })\n        // check if note exists (bool statement)\n        newNotesArr.length === notesArr.length && newNotesArr.push(clickNoteObj);\n        setNotesArr(() => {return [...newNotesArr]});\n    }\n\n    // functions\n    const renderShapes = () => {\n        let shapeType = 'rect';\n        canvasObj.selectAll(shapeType).remove()\n        const plotPoints = canvasObj.selectAll(shapeType)\n            .data(notesArr)\n            .enter()\n            .append(shapeType);\n        plotPoints\n            .attr('x', (d) => {return scaleObj['xScale'](d['x'])+1})\n            .attr('y', (d) => {return scaleObj['yScale'](d['y'])+1})\n            .attr('width', () => {return `${datumWidthPx-1}px`})\n            .attr('height', () => {return `${datumHeightPx-1}px`})\n        setCanvasObj(() => {return canvasObj});\n    }\n\n    const setScales = () => {\n        scaleObj['xScale'] = d3.scaleLinear()\n            .domain([1, noteCt])\n            .range([1, svgWidth]);\n        scaleObj['yScale'] = d3.scaleLinear()\n            .domain([1, pitchCt])\n            .range([svgHeight, 1]);\n        scaleObj['colorXScale'] = d3.scaleLinear()\n            .domain([0, d3.max(notesArr, (d) => {return d['x']})])\n            .range([100, 101]);\n        scaleObj['colorYScale'] = d3.scaleLinear()\n            .domain([0, d3.max(notesArr, (d) => {return d['y']})])\n            .range([100, 101]);\n    }\n\n    const renderAxes = (_canvasElem_) => {\n        _canvasElem_.append(\"g\")\n            .attr('transform', `translate(0,${svgHeight})`)\n            .attr(\"class\", \"vertical\")\n            .call(\n                d3.axisBottom(scaleObj['xScale'])\n                    .ticks(noteCt)\n                    .tickSize(-svgHeight)\n                    .tickFormat(\"\")\n            );\n        _canvasElem_.append(\"g\")\n            .attr(\"transform\", `translate(0, 0)`)\n            .attr(\"class\", \"horizontal\")\n            .call(\n                d3.axisLeft(scaleObj['yScale'])\n                    .ticks(noteCt * 2)\n                    .tickSize(-svgWidth)\n                    .tickFormat(\"\")\n            );\n    }\n\n    const updateCanvas = () => {\n        renderShapes();\n    }\n\n    const drawCanvas = () => {\n        const svgCanvas = d3.select(`#${idStr}`)\n            .append(\"svg\")\n            .attr(\"class\", \"canvas\")\n            .attr(\"width\", svgWidth)\n            .attr(\"height\", svgHeight);\n        setScales(scaleObj);\n        renderAxes(svgCanvas, scaleObj);\n        setCanvasObj(() => {return svgCanvas});\n    }\n    const reDrawCanvas = () => {\n        d3.select(`.canvas`).remove()\n        setCanvasObj(() => {return undefined})\n    }\n    // effects\n    // when notes array or url updates\n    useEffect(()=>{\n        setNotesArr(() => {return [...newNotes]});\n        canvasObj && reDrawCanvas()\n    }, [document.location.pathname])\n    useEffect(()=>{\n        if (!canvasObj) {drawCanvas()}\n        else {updateCanvas()}\n    }, [canvasObj, notesArr])\n\n    // when save is triggered\n    useEffect(()=>{\n        contentArr[instrumentArrIdx]['midi']['pianoRoll']['notes'] = notesArr;\n        canvasObj && updateProjectObjContent(contentArr);\n    }, [save])\n    return(\n        <div className=\"InstrumentCanvas\" onClick={(e) => {clickUpdateNotesArr(e)}} >\n            <div className=\"canvas-container\" id={idStr} ></div>\n        </div>\n    )\n}","// App.js > Main.jsx > ProjectView.jsx > ProjectMain.jsx > InstrumentList.jsx > InstrumentContainer.jsx\n\n// react\nimport React from 'react';\n\n// style\nimport './css/InstrumentContainer.css';\n\n// components\nimport InstrumentHead from './InstrumentHead';\nimport InstrumentCanvas from './InstrumentCanvas';\n\n// start\nexport default function InstrumentContainer({contentObj, instrumentObj, idProps, save}){\n    // destructure props\n    const {name, midi} = instrumentObj;\n    return(\n        <div className=\"InstrumentContainer\">\n            <InstrumentHead name={name} />\n            <InstrumentCanvas contentObj={contentObj} midi={midi} idProps={idProps} save={save} />\n        </div>\n    )\n}","// App.js > Main.jsx > ProjectView.jsx > ProjectMain.jsx > InstrumentList.jsx\n\n// react\nimport React from 'react';\n\n// style\nimport './css/InstrumentList.css';\n\n// components\nimport InstrumentContainer from './InstrumentContainer';\n\n// start\nexport default function InstrumentList({contentObj, save}){\n    // state\n\n    // destructuring\n    let instrumentArr = contentObj['contentArr'];\n\n    const buildInstrumentList = (_instrumentArr_) => {\n        let instElemArr = []\n        if (_instrumentArr_) {\n            instElemArr = _instrumentArr_.map((instrumentObj, idx) => {\n                let idProps = {idStr: `${instrumentObj['name']}${idx}`, instrumentArrIdx: idx}\n                return <InstrumentContainer contentObj={contentObj} instrumentObj={instrumentObj} idProps={idProps} save={save} key={`iccc-${idx}`} />\n            })\n        }\n        return instElemArr\n    }\n    return(\n        <div className=\"InstrumentList\">\n            {buildInstrumentList(instrumentArr)}\n        </div>\n    )\n}","// App.js > Main.jsx > ProjectView.jsx > ProjectMain.jsx\n\n// react\nimport React from 'react';\n\n// style\nimport './css/ProjectMain.css';\n\n// components\nimport InstrumentList from '../instrument/InstrumentList';\n\n// modules\n\n// start\nexport default function ProjectMain({loggedIn, projectMainProps, save}){\n    // state\n\n    // destructuring variables\n    let contentArr = projectMainProps['projectMainObj']['content'];\n    let projectName = projectMainProps['projectMainObj']['name'];\n    let updateProjectObjContent = projectMainProps['updateProjectObjContent'];\n\n    // render fxns\n    // const buildTransport = () => {}\n    return(\n        <div className=\"ProjectMain\">\n            <InstrumentList loggedIn={loggedIn} contentObj={{contentArr, projectName, updateProjectObjContent}} save={save} />\n        </div>\n    )\n}","export const initProject = (currentUsername, currentUserId) => {\n    const initObj = {\n        content: [\n            {\n                midi: {\n                    bpm: 128,\n                    pianoRoll: {\n                        automation: [],\n                        notes: [\n                            // {x: 1, y: 20, weight:1},\n                            // {x: 3, y: 22, weight:1},\n                        ],\n                    },\n                    timeSig: '4/4',\n                },\n                name: 'Piano',\n            },\n        ],\n        name: \"New Project\",\n        user: {\n            username: currentUsername,\n            id: currentUserId,\n        },\n        collaborators: [],\n\n    }\n    return initObj\n}","// App.js > Main.jsx > ProjectView.jsx\n// ROUTE FROM App.js > Nav.jsx {}\n// ROUTE FROM App.js > Main.jsx > ProjectList.jsx > ProjectListElem.jsx {}\n// ROUTE FROM App.js > Main.jsx > UserView.jsx {}\n\n// react\nimport React, {useState, useEffect} from 'react';\n\n// style\nimport './css/ProjectView.css';\n\n// components\n// import CommentList from '../comment/CommentList';\nimport ProjectNav from './ProjectNav';\nimport ProjectMain from './ProjectMain';\n\n// modules\n\n// util\nimport {GetJSON} from '../../util/djangoRequest';\nimport {getLsObj} from '../../util/localstorage';\nimport {initProject} from '../../util/initProject';\n\n// start\nexport default function ProjectView({loggedIn, props}){\n    // destructuring variables\n    const {params} = props['match'];\n    // const {state} = props['location'];\n\n    // global variables\n    const projectSlug = params['project_slug'];\n    const projectUsername = params['username'];\n    const currentUsername = getLsObj()['username'];\n    const currentUserId = getLsObj()['user_id'];\n    \n    // state\n    const [save, setSave] = useState(false);\n    const [projectObj, setProjectObj] = useState();\n    // const [projectNavObj, setProjectNavObj] = useState();\n    const [projectMainObj, setProjectMainObj] = useState();\n    \n    const resourceId = `${projectUsername}-${projectSlug}`;\n\n    // fxns\n    const updateProjectObjContent = (newContentArr) => {\n        setProjectObj(() => {return {...projectObj, content: newContentArr}})\n    }\n    const setAllProjectObjects = (_json_) => {\n        if (!_json_) {\n            _json_ = projectObj;\n            _json_['user'] = {username:currentUsername, userId:currentUserId}\n        }\n        // let newProjectNavObj = {\n        //     user: _json_['user'],\n        //     name: _json_['name'],\n        //     project_slug: _json_['project_slug'],\n        //     collaborators: _json_['collaborators'],\n        // }\n        let newProjectMainObj = {\n            name: _json_['name'],\n            content: _json_['content'],\n        }\n        // setProjectNavObj(() => {return {...newProjectNavObj}})\n        setProjectMainObj(() => {return {...newProjectMainObj}})\n    }\n    \n    // effect\n    useEffect(() => {\n        const requestProjectById = async () => {\n            let url = `/api/project/${resourceId}/`;\n            try {\n                let resJson = await GetJSON(url);\n                resJson && setAllProjectObjects(resJson);\n                setProjectObj(() => {return {...resJson}});\n            } catch (e) {\n                alert(\"Error in ProjectView: requesting\", url, e)\n            }\n        }\n        if (document.location.pathname === '/project/active/') {\n            const newProject = initProject(currentUsername, currentUserId)\n            setProjectObj(() => {return {...newProject}})\n            setAllProjectObjects(newProject)\n        } else {\n            requestProjectById()\n        }\n    }, [document.location.pathname])\n    return(\n        <div className=\"ProjectView\">\n            {projectObj && <ProjectNav loggedIn={loggedIn} projectNavProps={{projectObj, projectSlug}} saveProps={{save, setSave}} currentUsername={currentUsername} />}\n            {projectObj && <ProjectMain loggedIn={loggedIn} projectMainProps={{projectMainObj, updateProjectObjContent}} save={save} currentUsername={currentUsername} />}\n            {/* <CommentList /> */}\n        </div>\n    )\n}\n","// App.js > UserList.jsx\n\n// react\nimport React from 'react';\n\n// style\nimport './css/UserList.css';\n\n// components\n\n// start\nexport default function UserList(){\n    return(\n        <div className=\"UserList\">\n            \n        </div>\n    )\n}","// App.js > Main.jsx > UserView.jsx\n// ROUTE FROM App.js > Main.jsx > ProjectList.jsx > ProjectListElem.jsx\n// ROUTE FROM App.js > Main.jsx > ProjectView.jsx > ProjectNav.jsx {}\n// ROUTE FROM App.js > ProjectList.jsx > ProjectListElem.jsx > ProjectCollaboratorCard.jsx {}\n\n// react\nimport React, {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\n\n// style\nimport './css/UserView.css';\n\n// modules\n\n// util\nimport {GetJSON} from '../../util/djangoRequest';\n\n// components\n// import x from '.'\n\n// start\nexport default function UserView({props}){\n    // state\n    const [userObj, setUserObj] = useState({});\n\n    // destructure\n    const {params} = props['match'];\n\n    // global vars\n    const username = params['username'];\n\n    // fxns\n    const renderProjectsArr = () => {\n        let projectsArr = userObj['project'];\n        let projectElemsArr = projectsArr.map((projectObj, idx) => {\n            // destructuring\n            let {name, user, project_slug, created_dt, collaborators} = projectObj; // not sure what to do w resource_slug or updated_dt\n            // let {name, user, project_slug, resource_slug, created_dt, updated_dt, collaborators} = projectObj;\n            return(\n                <div className=\"project-info\" key={`uvpa-${idx}`} >\n                    <Link to={`/${user['username']}/${project_slug}/`} >\n                        <div className=\"project-name\" >{name}</div>\n                    </Link>\n                    <div className=\"collaborator-ct\">{`${collaborators.length} collaborator${collaborators.length > 1 ? 's':''}`}</div>\n                    <div className=\"dt-created\">{created_dt}</div>\n                </div>\n            )\n        })\n        return <div className=\"project-list\" >{projectElemsArr}</div>\n    }\n\n    // effects\n    useEffect(()=>{\n        const requestUserByUsername = async () => {\n            let url = `/api/user/${username}/`;\n            let resJSON = await GetJSON(url);\n            setUserObj(() => {return {...resJSON}})\n        }\n        requestUserByUsername()\n    }, [username])\n\n    return(\n        <div className=\"UserView\">\n            <div className=\"right-side\">\n                <div className=\"profile-picture\"><img src={userObj['profile_picture']} alt='Profile Pictire'/></div>\n                <div className=\"name\">\n                    <div className=\"first-name\">{userObj['first_name']}</div>\n                    <div className=\"last-name\">{userObj['last_name']}</div>\n                </div>\n                <div className=\"username\">{userObj['username']}</div>\n                <div className=\"contact-info\">\n                    {/* <div className=\"phone\">{userObj['phone']}</div>\n                    <div className=\"email\">{userObj['email']}</div>\n                    <div className=\"address\">{userObj['address']}</div> */}\n                </div>\n            </div>\n            \n            {userObj['project'] && renderProjectsArr()}\n        </div>\n    )\n}","// ROUTE App.js > Main.jsx > UserCreateForm.jsx\n\n// react\nimport React, {useState, useEffect} from 'react';\nimport {Redirect} from 'react-router-dom';\n\n// style\nimport './css/UserCreateForm.css';\n\n// modules\n\n// components\n\n// util\nimport {setLsByKey} from '../../util/localstorage';\nimport {PostJSON} from '../../util/djangoRequest';\n\n// start\nexport default function UserCreateForm({loginObj}){\n    // destructuring\n    const {loggedIn} = loginObj;\n\n    // state\n    const [username, setUsername] = useState('');\n\n    // event handlers\n    const onSubmitLogin = async (e, data) => {\n        let url = '/api/auth/login/';\n        let resJSON;\n        if (data) {\n            setUsername(() => data['username'])\n            resJSON = await PostJSON(url, data)\n        } else {\n            e.preventDefault();\n            let usernameValue, passwordValue;\n            let formElem = e.target\n            for (let idx = 0; idx < formElem.length; idx++) {\n                const formInput = formElem[idx];\n                if ((formInput.name) && (formInput.name === 'username')) {\n                    usernameValue = formInput.value;\n                } else if ((formInput.name) && (formInput.name === 'password')) {\n                    passwordValue = formInput.value;\n                }\n            }\n            usernameValue && setUsername(() => usernameValue)\n            if (usernameValue && passwordValue) {\n                data = {username: usernameValue, password: passwordValue};\n                resJSON = await PostJSON(url, data)\n            } else {\n                let msg;\n                if (!usernameValue && !passwordValue) {msg = 'username and password fields'}\n                else if (!usernameValue) {msg = 'username field'}\n                else if (!passwordValue) {msg = 'password field'}\n                alert(`Please enter ${msg}.`)\n                return\n            }\n        }\n        setLsByKey('diffuse_jwt', resJSON['token'])\n    }\n    const onSubmitSignup = async (e) => {\n        e.preventDefault();\n        let formElemArr = e.target;\n        let data = {};\n        for (let idx = 0; idx < formElemArr.length; idx++) {\n            const formElem = formElemArr[idx];\n            let key = formElem['name'];\n            data[key] = formElem['value']\n        }\n        \n        let url = `/api/user/`\n        await PostJSON(url, data); // not sure what to do with resjson here\n        // let resJSON = await PostJSON(url, data);\n        if (true){}\n        else {\n            // onSubmitLogin(e)\n        }\n    }\n\n    // effects\n    useEffect(()=>{\n        return <Redirect to={`/${username}/`} />;\n    }, [loggedIn, username])\n\n    // render fxns\n    const buildInput = (type, name, placeholder) => {\n        if (name === 'phone') {\n            return <input type={type} name={name} className={name} placeholder={placeholder} />\n        } else {\n            return(\n                <input type={type} name={name} className={name} placeholder={placeholder} />\n            )\n        }\n    }\n    const buildUserForm = () => {\n        return(\n            <form onSubmit={(e) => onSubmitSignup(e)} className=\"user-form\">\n                <div className=\"part-1\">\n                    {buildInput('email', 'email', 'Email')}\n                    {buildInput('text', 'username', 'Userame')}\n                    {buildInput('password', 'password', 'Password')}\n                </div>\n                <div className=\"part-2\">\n                    {buildInput('text', 'firstname', 'First Name')}\n                    {buildInput('text', 'lastname', 'Last Name')}\n                    {buildInput('phone', 'phone', 'Phone')}\n                    {buildInput('date', 'dob', 'Birthdate')}\n                </div>\n                <div className='part-3'>\n                    {buildInput('url', 'profilepicture', 'Profile Picture')}\n                </div>\n                {buildInput('submit', 'submit', 'Submit')}\n            </form>\n        )\n    }\n    return(\n        <div className=\"UserCreateForm\" >\n            <div className=\"title\">Register</div>\n            {buildUserForm()}\n        </div>\n    )\n}","// ROUTE App.js > Main.jsx > UserLogin.jsx\n\n// react\nimport React, {useState} from 'react';\nimport {Redirect, Link} from 'react-router-dom';\n\n// style\nimport './css/UserLogin.css';\n\n// components\n\n// util\nimport {setLsByKey} from '../../util/localstorage';\nimport {Post} from '../../util/djangoRequest';\n// import {getCookieByKey} from '../../util/cookies';\n\n// start\nexport default function UserLogin({loginObj}) {\n\n    // destructuring\n    const {loggedIn, setLoggedIn} = loginObj;\n\n    // state\n    const [usernameState, setUsernameState] = useState();\n\n    // utility fxns\n    \n    // event handlers\n    const onSubmitLogin = async (e) => {\n        e.preventDefault();\n        let username, password, userId;\n        let formElem = e.target\n        for (let idx = 0; idx < formElem.length; idx++) {\n            const formInput = formElem[idx];\n            if ((formInput.name) && (formInput.name === 'username')) {\n                username = formInput.value;\n            } else if ((formInput.name) && (formInput.name === 'password')) {\n                password = formInput.value;\n            }\n        }\n        username && setUsernameState(() => username)\n        if (username && password) {\n            let url = '/api/auth/login/';\n            let body = JSON.stringify({username, password});\n            let response; let resJson;\n            try {\n                response = await Post(url, body);\n                let httpStatus = response.status;\n                \n                // handle error code\n                if ([403].includes(httpStatus)) {\n                    alert('something went wrong, 403 status')\n                }\n            } catch (e) {\n                alert('failure body: ', e, body)\n            }\n            try {\n                resJson = await response.json();\n                \n                // manage the response\n                let jwt = resJson['token'];\n                userId = resJson['user']['pk'];\n\n                setLsByKey('diffuse_jwt', jwt);\n                setLsByKey('username', username);\n                setLsByKey('user_id', userId);\n                setLoggedIn(() => true);\n            } catch (e) {\n                let errorStatus = e.status;\n                alert('\\n\\nerror (below)\\n\\n', errorStatus, '\\n\\n', e)\n            }\n        } else {\n            let msg;\n            if (!username && !password) {msg = 'username and password fields'}\n            else if (!username) {msg = 'username field'}\n            else if (!password) {msg = 'password field'}\n            alert(`Please enter ${msg}.`)\n        }\n    }\n\n    // render functions\n    return(\n        loggedIn && !!(usernameState) ? <Redirect to={`/${usernameState}/`} /> :\n        <div className=\"UserLogin\">\n            <form onSubmit={(e) => onSubmitLogin(e)} className=\"login\">\n                <input name='username' type=\"text\" className=\"username\" placeholder=\"Username\" autoFocus />\n                <input name='password' type=\"password\" className=\"password\" placeholder=\"Password\" />\n                <input name='submit' type=\"submit\" className=\"submit\" value=\"Submit\" />\n            </form>\n            <Link to={`/user/new/`} className=\"create-user\">{`New here? Click here to signup`}</Link>\n        </div>\n    )\n    \n}","// App.js > Main.jsx\n\n// react\nimport React from 'react';\nimport {Route, Switch} from 'react-router-dom';\n\n// components\nimport About from './About';\n// project\nimport ProjectList from './project/ProjectList';\nimport ProjectView from './project/ProjectView';\n// user\nimport UserList from './user/UserList';\nimport UserView from './user/UserView';\nimport UserCreateForm from './user/UserCreateForm';\nimport UserLogin from './user/UserLogin';\n// history\n// import HistoryView from './history/HistoryView';\n// import CommitView from './history/commit/CommitView';\n\n// start\nexport default function Main({loginObj, lsObj}){\n    // destructuring\n    const {loggedIn, setLoggedIn} = loginObj;\n    const {username} = lsObj;\n\n    // state\n\n    return(\n        <div className=\"Main\">\n            <Switch>\n                <Route exact path=\"/project/active/\" render={(props) => <ProjectView loggedIn={loggedIn} props={props} />} />\n                <Route exact path=\"/login/\" render={() => <UserLogin loginObj={{loggedIn, setLoggedIn}} username={username} />} />\n                <Route exact path=\"/new/\" render={() => <UserCreateForm loginObj={{loggedIn, setLoggedIn}} />} />\n                <Route exact path=\"/users/\" render={(props) => <UserList loggedIn={loggedIn} props={props} />} />\n                <Route exact path=\"/projects/recent/\" render={() => <ProjectList loggedIn={loggedIn} />} />\n                <Route exact path=\"/projects/\" render={() => <ProjectList loggedIn={loggedIn} />} />\n                <Route exact path=\"/feed/\" render={() => <ProjectList loggedIn={loggedIn} />} />\n\n                {/* <Route exact path=\"/:username/:project_slug/history/:commitId/\" render={(props) => <CommitView props={props} />} /> */}\n                {/* <Route exact path=\"/:username/:project_slug/history/\" render={(props) => <HistoryView props={props} />} /> */}\n\n                {/* PUT ALL OTHER VIEWS BEFORE THIS SECTION */}\n                <Route exact path=\"/:username/:project_slug/\" render={(props) => <ProjectView props={props} />} />\n                <Route exact path=\"/:username/\" render={(props) => <UserView loggedIn={loggedIn} props={props} username={username} />} />\n                <Route exact path=\"/\" component={About} />\n            </Switch>\n        </div>\n    )\n}","// App.js > SidebarRight.jsx > ProjectSidebar.jsx\n\n// react\nimport React from 'react';\n// import {Link} from 'react-router-dom';\n\n// style\nimport './css/ProjectSidebar.css';\n\n// components\n\n// start\nexport default function ProjectSidebar(){\n    const addInstrumentDropdown = () => {\n        let instrumentBankArr = []\n        return(\n            <div className=\"instrument-dropdown\">\n                {instrumentBankArr}\n            </div>\n        )\n    }\n    let {pathname} = document['location'];\n    let sidebarElemArr = [];\n    if (pathname && pathname === '/project/active/'){\n        sidebarElemArr.push(\n            <div className=\"add-instrument\" onClick={() => {addInstrumentDropdown()}} key={`psbr`} >Add Instrument</div>\n        );\n    }\n    return(\n        <div className=\"ProjectSidebar fade-in\">\n            {sidebarElemArr}\n        </div>\n    )\n}","// App.js > SidebarLeft.jsx\n\n// react\nimport React from 'react';\n\n// components\nimport ProjectSidebar from './project/ProjectSidebar';\n\n// start\nexport default function SidebarLeft({loggedIn}){\n    const placeholderSidebar = () => {\n        return(\n            <div className=\"placeholderSidebar\">\n                Click to sign in or sign up here!\n            </div>\n        )\n    }\n    return(\n        <div className=\"SidebarLeft\">\n            {loggedIn ? <ProjectSidebar />: placeholderSidebar()}\n        </div>\n    )\n}","// App.js > SidebarRight.jsx\n\n// react\nimport React from 'react';\n\n// components\n\n// start\nexport default function SidebarRight({loggedIn}){\n    return(\n        <div className=\"SidebarRight\">\n        </div>\n    )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// App.js\n\n// react\nimport React, {useState, useEffect} from 'react';\nimport {BrowserRouter} from 'react-router-dom';\n\n// modules\n\n// stylin\nimport './App.css';\n\n// components\nimport Nav from './components/Nav';\nimport Main from './components/Main';\nimport SidebarLeft from './components/SidebarLeft'\nimport SidebarRight from './components/SidebarRight'\n\n// util\nimport {getLsObj} from './util/localstorage';\n\n// start\nexport default function App() {\n\tlet initLsObj = getLsObj()\n\n\t// state\n\tconst [loggedIn, setLoggedIn] = useState(false);\n\tconst [lsObj, setLsObj] = useState(initLsObj);\n\n\t// utility functions\n\tconst checkLsObj = () => {\n\t\tlet _lsObj_ = getLsObj();\n\t\tsetLsObj(() => {return {..._lsObj_}})\n\t}\n\t\n\t// effects\n\tuseEffect(()=>{\n\t\tcheckLsObj()\n\t}, [loggedIn])\n\t\n  \treturn (\n\t\t<BrowserRouter>\n\t\t\t<div className=\"App\">\n\t\t\t\t<Nav loginObj={{loggedIn, setLoggedIn}} lsObj={lsObj} checkLsObj={checkLsObj} />\n\t\t\t\t<SidebarLeft loggedIn={loggedIn} />\n\t\t\t\t<Main loginObj={{loggedIn, setLoggedIn}} lsObj={lsObj} />\n\t\t\t\t<SidebarRight />\n\t\t\t</div>\n\t\t</BrowserRouter>\n  \t)\n}"],"sourceRoot":""}