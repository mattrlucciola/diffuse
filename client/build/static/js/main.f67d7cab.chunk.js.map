{"version":3,"sources":["util/localstorage.js","components/Nav.jsx","components/About.jsx","util/cookies.js","util/djangoRequest.js","components/project/ProjectListElem.jsx","components/project/ProjectList.jsx","components/project/ProjectCollaboratorCard.jsx","util/slugify.js","components/project/ProjectNav.jsx","components/instrument/InstrumentHead.jsx","components/instrument/InstrumentCanvas.jsx","components/instrument/InstrumentContainer.jsx","components/instrument/InstrumentList.jsx","components/project/ProjectMain.jsx","util/initProject.js","components/project/ProjectView.jsx","components/user/UserView.jsx","components/user/UserCreateForm.jsx","components/user/UserLogin.jsx","components/history/CommitCard.jsx","components/history/HistoryView.jsx","components/history/CommitView.jsx","components/Main.jsx","components/sidebar/ProjectSidebar.jsx","components/SidebarLeft.jsx","components/SidebarRight.jsx","serviceWorker.js","index.js","App.js"],"names":["setLsByKey","_key_","_value_","localStorage","setItem","getLsObj","lsObj","includes","deleteLsObj","removeItem","Nav","loginObj","loggedIn","setLoggedIn","username","useState","search","setSearch","mouseOverPpl","setMouseOverPpl","onClickLogout","a","console","log","className","onSubmit","e","preventDefault","to","type","value","placeholder","onChange","newSearch","target","pathname","state","projectNavObj","onMouseEnter","onMouseLeave","onClick","About","getCookieByKey","key","cookieStr","document","cookie","alert","returnVal","split","forEach","item","kvArr","trim","cookieKey","cookieValue","_post","url","body","csrftoken","fetch","credentials","method","mode","headers","response","_put","token","JSON","stringify","_get","_delete","Post","PostJSON","json","responseJSON","Put","GetJSON","Delete","ProjectListElem","projectObj","user","name","project_slug","id","ProjectList","listElemArr","setListElemArr","buildListElemArr","resJSON","projectElemArr","map","idx","useEffect","ProjectCollaboratorCard","collaborators","collaboratorsArr","collaborator","slugify","string","p","RegExp","join","toString","toLowerCase","replace","c","charAt","indexOf","ProjectNav","projectNavProps","saveProps","currentUsername","projectSlug","projectUserObj","currentUserObj","save","setSave","showCollab","setShowCollab","toggleSED","setToggleSED","changeTitleBool","setChangeTitleBool","titleStr","setTitleStr","onClickSaveProject","requestBody","location","onSubmitChangeTitle","newTitle","currentTarget","onChangeChangeTitle","onBlur","autoFocus","length","InstrumentHead","style","display","flexFlow","justifyContent","alignItems","scaleObj","xScale","yScale","radiusScale","colorXScale","colorYScale","InstrumentCanvas","contentObj","midi","idProps","contentArr","updateProjectObjContent","projectName","notes","pianoRoll","idStr","instrumentArrIdx","newNotes","noteObj","x","y","stepStart","midinote","weight","duration","svgHeight","svgWidth","datumSize","Math","floor","pitchCt","noteCt","notesArr","setNotesArr","canvasObj","setCanvasObj","updateCanvas","selectAll","remove","data","enter","append","attr","d","drawCanvas","_canvasElem_","svgCanvas","d3","domain","range","call","ticks","scrollY","scrollTop","offsetTop","getBoundingClientRect","top","offsetLeft","left","leftCoord","pageX","topCoord","pageY","clickNoteObj","newNotesArr","filter","push","clickUpdateNotesArr","InstrumentContainer","instrumentObj","InstrumentList","instrumentArr","_instrumentArr_","instElemArr","buildInstrumentList","ProjectMain","projectMainProps","initProject","currentUserId","content","bpm","automation","timeSig","ProjectView","props","params","projectUsername","setProjectObj","setProjectNavObj","projectMainObj","setProjectMainObj","resourceId","setAllProjectObjects","_json_","userId","newProjectNavObj","newProjectMainObj","requestProjectById","resJson","message","newProject","newContentArr","UserView","userObj","setUserObj","requestUserByUsername","src","alt","projectElemsArr","created_dt","resource_id","updated_dt","renderProjectsArr","UserCreateForm","onSubmitSignup","formElemArr","formElem","buildInput","UserLogin","usernameState","setUsernameState","onSubmitLogin","formInput","password","httpStatus","status","jwt","i","errorStatus","msg","CommitCard","commitObj","projectId","author","commitId","HistoryView","historyArr","CommitView","Main","exact","path","render","component","ProjectSidebar","sidebarElemArr","SidebarLeft","SidebarRight","Boolean","window","hostname","match","ReactDOM","initLsObj","setLsObj","checkLsObj","_lsObj_","checkLoggedIn","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f67d7cab.chunk.js","sourcesContent":["export const getLsByKey = (_key_) => {\n    localStorage.getItem(_key_);\n}\nexport const setLsByKey = (_key_, _value_) => {\n    localStorage.setItem(_key_, _value_);\n}\nexport const deleteLsKey = (_key_) => {\n    localStorage.removeItem(_key_);\n}\nexport const getLsObj = () => {\n    let lsObj = {}\n    for (let _key_ in localStorage) {\n        let _value_ = localStorage[_key_];\n        if (!['key', 'getItem', 'setItem', 'removeItem', 'clear', 'length'].includes(_key_)) {\n            lsObj[_key_] = _value_;\n        }\n    }\n    return lsObj\n}\nexport const setLsObj = (_lsObj_) => {\n    for (let _key_ in _lsObj_) {\n        setLsByKey(_key_, _lsObj_[_key_])\n    }\n}\nexport const deleteLsObj = () => {\n    for (let _key_ in localStorage) {\n        if (!['key', 'getItem', 'setItem', 'removeItem', 'clear', 'length'].includes(_key_)) {\n            localStorage.removeItem(_key_);\n        }\n    }\n}","// App.js > Nav.jsx\n\n// react\nimport React, {useState} from 'react';\nimport {Link, Redirect} from 'react-router-dom';\n\n// components\n// import x from '.'\n\n// utility functions\nimport {deleteLsObj, getLsObj} from '../util/localstorage'\n\n// start\n// export default function Nav({loginObj, lsObj, checkLsObj}){\nexport default function Nav({loginObj, lsObj}){\n    // destructuring\n    const {loggedIn, setLoggedIn} = loginObj;\n    const {username} = lsObj;\n\n    // states\n    const [search, setSearch] = useState('');\n    const [mouseOverPpl, setMouseOverPpl] = useState(false);\n\n    // event handlers\n    const onSubmitSearch = (e) => {\n        e.preventDefault();\n        return <Redirect to={`search${search}`}></Redirect>\n    }\n    const onChangeSearch = (e) => {\n       let newSearch = e.target.value;\n       setSearch(newSearch);\n    }\n    const onClickLogout = async () => {\n        console.log('logging out');\n        deleteLsObj()\n        setLoggedIn(() => false)\n    }\n    // render functions\n    const pplDropDown = () => {\n        return (\n            <div className=\"pplDropDown-card\">\n                <div className=\"logout\" onClick={onClickLogout} >Logout</div>\n            </div>\n        )\n    }\n    const buildProjectsProfilesLinks = () => {\n        let pplElem = (loggedIn) ? (\n            <div className=\"projects-profiles-links\">\n                <Link to={{pathname: `/project/active/`, state: {projectNavObj:{}}}} className=\"projects noselect\" >Create Project</Link>\n                <div className=\"login-profile noselect\" onMouseEnter={(e) => setMouseOverPpl(true)} onMouseLeave={(e) => setMouseOverPpl(false)}>\n                    <Link to={`/${username}/`} >{username}</Link>\n                    <div className=\"pplDropDown-container\">{mouseOverPpl && pplDropDown()}</div>\n                </div>\n            </div>\n        ):(\n            <div className=\"projects-profiles-links\">\n                <Link to={`/projects/`} className=\"projects noselect\" >{`Recent Projects`}</Link>\n                <Link to={`/login/`} className=\"login-profile noselect\" >{`Login / Register`}</Link>\n            </div>\n        );\n        return pplElem\n    }\n    // end\n    return(\n        <div className=\"Nav\">\n            <form className='search' onSubmit={onSubmitSearch}>\n                <input type=\"text\" className=\"searchbar\" value={search} placeholder='find projects/users' onChange={onChangeSearch} />\n            </form>\n            <Link to={loggedIn ? `/feed`: `/`}>\n                <div className=\"logo noselect\">\n                    <div className=\"left noselect\">Diff</div><div className=\"right noselect\">use</div>\n                </div>\n            </Link>\n            {buildProjectsProfilesLinks()}\n        </div>\n    )\n}","// App.js > Main.jsx > Center.jsx > Content.jsx > About.jsx\n\n// react\nimport React from 'react';\n\n// components\n\n// start\nexport default function About(){\n    return(\n        <div className=\"About\">\n            This is a little intro about the page\n        </div>\n    )\n}","export const getCookieByKey = (key) => {\n    let cookieStr = document.cookie\n    if (!key) {\n        alert(\"Please enter a valid key\")\n    } else if (!cookieStr || cookieStr === \"\") {\n        console.log(\"Cookie is empty\")\n    } else if (!cookieStr.includes(key)) {\n        alert(\"Key is not in cookie\")\n    }\n    if (cookieStr && cookieStr !== '') {\n        let returnVal;\n        cookieStr.split(';').forEach((item) => {\n            let kvPair = item.trim();\n            let kvArr = kvPair.split('=');\n            let cookieKey = kvArr[0]\n            let cookieValue = kvArr[1]\n            if (key === cookieKey) {\n                returnVal = cookieValue.trim()\n            }\n        })\n        if (returnVal) {\n            return returnVal\n        } else {\n            alert('no return value!')\n        }\n    }\n}\nexport const getCookieObj = () => {\n    let cookieObj = {};\n    let cookieStr = document.cookie;\n    cookieStr.split(';').forEach((item) => {\n        let kvPair = item.trim();\n        let kvArr = kvPair.split('=');\n        if ((kvArr[1].length > 0) && !(['null', 'undefined'].includes(kvArr[1]))) {\n            cookieObj[kvArr[0]] = kvArr[1];\n        } else if (!cookieObj['diffuse_jwt'] && cookieObj['csrftoken']) {\n            document.cookie = `expires=Thu, 01 Jan 1970 00:00:00 GMT`;\n        } else {\n            document.cookie = `${kvArr[0]}=; expires=Thu, 01 Jan 1970 00:00:00 GMT`;\n        }\n    })\n    console.log(document.cookie)\n    return cookieObj\n}\nexport const deleteCookie = (_key_) => {\n    if (document.cookie.split(';').filter((item) => item.trim().startsWith(_key_)).length) {\n        document.cookie = `${_key_}=; expires=0`;\n        document.cookie = `${_key_}=; expires=Thu, 01 Jan 1970 00:00:00 GMT`;\n        console.log('deleted', _key_)\n        console.log(document.cookie)\n    }\n}\nexport const createCookie = (_key_, _value_, _expiryMinutes_) => {\n    if (((_value_) && (typeof _value_ === typeof '' && (_value_.length > 0 || !(['null', 'undefined'].includes(_value_)))))) {\n        let expiryDt = new Date(+new Date() + _expiryMinutes_ * 60000);\n        document.cookie = `${_key_}=${_value_}; expires=${expiryDt}`;\n    }\n}","import {getCookieByKey} from './cookies';\n\nexport const _post = async (url, body) => {\n    let csrftoken = getCookieByKey(\"csrftoken\");\n    let response = await fetch(\n        url,\n        {\n            credentials: 'include',\n            method: 'POST',\n            mode: 'same-origin',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'X-CSRFToken': csrftoken,\n            },\n            body,\n        }\n    )\n    return response\n}\nexport const _put = async (url, body, token) => {\n    let csrftoken = getCookieByKey(\"csrftoken\");\n    body['Authorization'] = `Token ${token}`;\n    let response = await fetch(\n        url,\n        {\n            credentials: 'include',\n            method: 'PUT',\n            mode: 'same-origin',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'X-CSRFToken': csrftoken,\n                'Authorization': `Token ${token}`,\n            },\n            body: JSON.stringify(body),\n        }\n    )\n    return response\n}\nexport const _get = async (url, body) => {\n    let csrftoken;\n    let headers = {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n    }\n    if (body && body['diffuse_jwt']) {\n        csrftoken = getCookieByKey(\"csrftoken\");\n        headers['X-CSRFToken'] = csrftoken;\n    }\n    let response = await fetch(\n        url,\n        {\n            credentials: 'include',\n            method: 'GET',\n            mode: 'same-origin',\n            headers: headers,\n            body,\n        }\n    )\n    return response\n}\nexport const _delete = async (url, body, token) => {\n    let csrftoken = getCookieByKey(\"csrftoken\");\n    body['Authorization'] = `Token ${token}`;\n    let response = await fetch(\n        url,\n        {\n            credentials: 'include',\n            method: 'DELETE',\n            mode: 'same-origin',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'X-CSRFToken': csrftoken,\n                'Authorization': `Token ${token}`,\n            },\n            body: JSON.stringify(body),\n        }\n    )\n    return response\n}\n\nexport const Post = async (url, body) => {\n    let response = await _post(url, body);\n    return response\n}\nexport const PostJSON = async (url, body) => {\n    let response = await _post(url, body);\n    let responseJSON = await response.json();\n    return responseJSON\n}\nexport const Put = async (url, body, token) => {\n    let response = await _put(url, body, token);\n    return response\n}\nexport const PutJSON = async (url, body, token) => {\n    let response = await _put(url, body, token);\n    let responseJSON = await response.json();\n    return responseJSON\n}\nexport const Get = async (url, body) => {\n    let response = await _get(url, body);\n    return response;\n}\nexport const GetJSON = async (url, body) => {\n    let response = await _get(url, body);\n    let responseJSON = await response.json();\n    return responseJSON;\n}\nexport const Delete = async (url, body, token) => {\n    let response = await _delete(url, body, token);\n    return response;\n}\nexport const DeleteJSON = async (url, body, token) => {\n    let response = await _delete(url, body, token);\n    let responseJSON = await response.json();\n    return responseJSON;\n}","// App.js > Main.jsx > ProjectList.jsx > ProjectListElem.jsx\n\n// react\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\n// components\n// import x from '.'\n\n// start\nexport default function ProjectListElem({projectObj}){\n\n    // destructuring\n    const {user, name, project_slug} = projectObj;\n\n    // global vars\n    let {username, id} = user;\n\n    return(\n        <div className=\"ProjectListElem\" key={`PLE${project_slug}`} >\n            <div className=\"author\"><Link to={`/${username}/`}>{username}</Link></div>\n            <div className=\"name\"><Link to={`/${username}/${project_slug}/`}>{name}</Link></div>\n        </div>\n    )\n}","// App.js > Main.jsx > ProjectList.jsx\n\n// react\nimport React, {useState, useEffect} from 'react';\n\n// modules\n\n// util\nimport {GetJSON} from '../../util/djangoRequest';\n\n// components\nimport ProjectListElem from './ProjectListElem';\n\n// start\nexport default function ProjectList(){\n    const [listElemArr, setListElemArr] = useState([])\n    const buildListElemArr = async () => {\n        let url = `/api/project/`;\n        let resJSON = await GetJSON(url);\n        let projectElemArr = resJSON.map((projectObj, idx) => {\n            return <ProjectListElem projectObj={projectObj} key={`ple-${idx}`} />\n        })\n        setListElemArr(projectElemArr)\n    }\n\n    useEffect(()=>{\n        buildListElemArr()\n    },[])\n    return(\n        <div className=\"ProjectList fade-in\">\n            {listElemArr}\n        </div>\n    )\n}","// App.js > ProjectList.jsx > ProjectListElem.jsx > ProjectCollaboratorCard.jsx\n\n// react\nimport React, {useState} from 'react';\nimport {Link} from 'react-router-dom';\n\n// components\n// import x from '.'\n\n// start\nexport default function ProjectCollaboratorCard({projectNavObj}){\n    // destructuring\n    const {collaborators} = projectNavObj;\n\n    // states\n    const [collaboratorsArr, setCollaboratorsArr] = useState(collaborators ? collaborators: [])\n\n    // functions\n    const buildCollaboratorList = () => {\n        return collaboratorsArr.map((collaborator, idx) => {\n            return(\n                <div className=\"collaborator\"  key={`collab-name-${idx}`}>\n                    <Link to={`/${collaborator['username']}/`}>{collaborator['username']}</Link>\n                </div>\n            )\n        })\n    }\n\n    return(\n        <div className=\"ProjectCollaboratorCard\" key={`pcc--${projectNavObj['user']['username']-projectNavObj['project_slug']}`} >\n            <div className=\"title\">Add</div>\n            <div className=\"collaborator-container\">\n                {buildCollaboratorList(collaborators)}\n            </div>\n        </div>\n    )\n}","export const slugify = (string) => {\n    const a = 'àáâäæãåāăąçćčđďèéêëēėęěğǵḧîïíīįìłḿñńǹňôöòóœøōõőṕŕřßśšşșťțûüùúūǘůűųẃẍÿýžźż·/_,:;'\n    const b = 'aaaaaaaaaacccddeeeeeeeegghiiiiiilmnnnnoooooooooprrsssssttuuuuuuuuuwxyyzzz------'\n    const p = new RegExp(a.split('').join('|'), 'g')\n  \n    return string.toString().toLowerCase()\n        .replace(/\\s+/g, '-') // Replace spaces with -\n        .replace(p, c => b.charAt(a.indexOf(c))) // Replace special characters\n        .replace(/&/g, '-and-') // Replace & with 'and'\n        .replace(/[^\\w\\-]+/g, '') // Remove all non-word characters\n        .replace(/\\-\\-+/g, '-') // Replace multiple - with single -\n        .replace(/^-+/, '') // Trim - from start of text\n        .replace(/-+$/, '') // Trim - from end of text\n}","// App.js > Main.jsx > ProjectView.jsx > ProjectNav.jsx\n\n// react\nimport React, {useState} from 'react';\nimport {Link} from 'react-router-dom';\n\n// modules \nimport axios from 'axios';\n\n// components\nimport ProjectCollaboratorCard from './ProjectCollaboratorCard';\n\n// util\nimport {getLsByKey, getLsObj} from '../../util/localstorage';\nimport {Put, Post, Delete} from '../../util/djangoRequest';\nimport {slugify} from '../../util/slugify';\n\n// start\nexport default function ProjectNav({loggedIn, projectNavProps, saveProps, currentUsername}){\n    console.log(projectNavProps)\n    // destructuring variables\n    const {projectObj, projectSlug} = projectNavProps;\n    const projectUserObj = projectObj['user'];\n    const currentUserObj = {username: getLsObj()['username'], id: getLsObj()['user_id']}\n    const collaboratorsArr = projectObj['collaborators']\n    const {save, setSave} = saveProps;\n\n    // state\n    const [showCollab, setShowCollab] = useState(false)\n    const [toggleSED, setToggleSED] = useState(false)\n    const [changeTitleBool, setChangeTitleBool] = useState(false)\n    const [titleStr, setTitleStr] = useState(projectObj['name'] ? projectObj['name']: 'New Project')\n    // const [editForm, setEditForm] = useState(false)\n\n    // event handlers\n    // const onClickEditProject = async (e) => {\n    //     // change the d3 canvas to allow for editing\n    //     e.preventDefault();\n    // }\n    const onClickSaveProject = async (e) => {\n        e.preventDefault();\n        let url = `/api/project/`;\n        let requestBody = {...projectObj};\n        requestBody['project_slug'] = slugify(projectObj['name']);\n        requestBody['resource_id'] = slugify(`${projectObj['user']['username']}-${projectObj['name']}`);\n        delete requestBody['user'];\n        if (document.location.pathname === '/project/active/') {\n            await Post(url, JSON.stringify(requestBody));\n        } else {\n            url = `/api/project/${requestBody['resource_id']}/`\n            delete requestBody['resource_id']\n            await Put(url, requestBody, getLsObj()['diffuse_jwt']);\n        }\n    }\n    const onClicktoggleCollaboratorCard = () => {\n        setShowCollab(!showCollab)\n    }\n    const onClickChangeTitle = () => {\n        setChangeTitleBool(()=>{return true})\n    }\n    const onChangeChangeTitle = (e) => {\n        let newTitle = e.currentTarget.value\n        console.log(newTitle)\n        setTitleStr(() => {return newTitle})\n    }\n    const onSubmitChangeTitle = (e) => {\n        e.preventDefault()\n        \n        // save/partial update to database if its an existing project\n        if (collaboratorsArr) {\n        }\n        // exit the input\n        setChangeTitleBool(()=>{return false})\n    }\n\n    // render fxns\n    const buildSaveEditDelete = () => {\n        return (\n            <div className=\"save-edit-delete-container noselect\" onClick={() => {setToggleSED(!toggleSED); setSave(() => !save)}} >\n                |||\n                {toggleSED ? (\n                    <div className=\"s-e-d-dropdown fade-in\" >\n                        <div className=\"save\" onClick={(e) => {onClickSaveProject(e)}} >Save</div>\n                        {/* <div className=\"edit\" onClick={(e) => {onClickEditProject(e)}} >Edit</div> */}\n                        <div className=\"delete\" onClick={(e) => {Delete(e)}} >Delete</div>\n                    </div>\n                ): <div></div>\n                }\n            </div>\n        )\n    }\n    const buildCollaboratorCard = () => {\n        return (\n            showCollab && <div className=\"collab-card fade-in noselect\"><ProjectCollaboratorCard projectNavObj={projectObj} /></div>\n        )\n    }\n    const buildTitleElem = () => {\n        return(\n            <div className=\"title\">{titleStr}</div>\n        )\n    }\n    const buildEditTitleElem = () => {\n        return(\n            <form onSubmit={e => {onSubmitChangeTitle(e)}}>\n                <input type=\"text\" className=\"title-edit\" value={titleStr} onChange={e => {onChangeChangeTitle(e)}} onBlur={e => {onSubmitChangeTitle(e)}} autoFocus />\n                <input type=\"submit\" className=\"title-edit-submit\" value='' />\n            </form>\n        )\n    }\n\n    // save, edit, {(view collaborators) + (add collaborator) + (collaborator count)}, {history + (history count)}\n    return(\n        <div className=\"ProjectNav\" >\n            <div className=\"title-container\" onClick={(e) => {onClickChangeTitle(e)}} >{changeTitleBool ? buildEditTitleElem(): buildTitleElem()}</div>\n            <div className=\"sub-nav\">\n                <div className=\"creator\" ><Link to={`/${projectUserObj['username']}/`} >{projectUserObj['username']}</Link></div>\n                <div className=\"collaborate-history-container noselect\" >\n                    <div className=\"collab-link noselect\" onClick={() => {onClicktoggleCollaboratorCard()}} >\n                        {collaboratorsArr ?\n                            `${collaboratorsArr.length} Collaborator${(collaboratorsArr.length > 1) ? 's': ''}`:\n                            `Add Collaborators`\n                        }\n                    </div>\n                    {buildCollaboratorCard()}\n                    {\n                        <div className=\"history-link noselect\">\n                            <Link to={{pathname: `/${projectUserObj['username']}/${projectSlug}/history/`, state: {projectObj}}} >History</Link>\n                        </div>\n                    }\n                </div>\n                {projectUserObj['username'] === currentUserObj['username'] && buildSaveEditDelete()}\n            </div>\n        </div>\n    )\n}","// App.js > ProjectView.jsx > ProjectMain.jsx > InstrumentList.jsx > InstrumentContainer.jsx > InstrumentHead.jsx\n\n// react\nimport React from 'react';\n\n// components\n\n// start\nexport default function InstrumentHead({name}){\n    /**@type {React.CSSProperties}*/\n    const instrumentStyling = {\n        display:'flex',\n        flexFlow:'row',\n        justifyContent:'center',\n        alignItems:'center',\n    }\n    return(\n        <div className=\"InstrumentHead\" style={instrumentStyling} >\n            {name}\n        </div>\n    )\n}","// App.js > ProjectView.jsx > ProjectMain.jsx > InstrumentList.jsx > InstrumentContainer.jsx > InstrumentCanvas.jsx\n\n// react\nimport React, {useState, useEffect} from 'react';\n\n// modules\nimport * as d3 from 'd3';\n\n// components\nconst scaleObj = {\n    xScale: null, yScale: null, radiusScale: null, colorXScale: null, colorYScale: null,\n}\n// start\nexport default function InstrumentCanvas({contentObj, midi, idProps, save}){\n    // destructuring\n    const {contentArr, projectName, updateProjectObjContent} = contentObj;\n    const {pianoRoll} = midi;\n    const {notes} = pianoRoll;\n    const {idStr, instrumentArrIdx} = idProps;\n    // const {automation} = pianoRoll;\n\n    let newNotes = notes.map((noteObj) => {\n        let {x, y, stepStart, midinote, weight, duration} = noteObj\n        x = x ? x: stepStart;\n        y = y ? y: midinote;\n        weight = weight ? weight: 1;\n        duration = duration ? duration: 1;\n        return {x, y, weight: 1}\n    })\n\n    // state\n    const [svgHeight] = useState(1500);\n    const [svgWidth] = useState(1100);\n    const [datumSize] = useState(25);\n    const [pitchCt] = useState(Math.floor(svgHeight / datumSize));\n    const [noteCt] = useState(Math.floor(svgWidth / datumSize));\n    const [notesArr, setNotesArr] = useState([...newNotes]);\n    const [canvasObj, setCanvasObj] = useState();\n    // const [automationArr, setAutomationArr] = useState([...automation]);\n\n    // event listeners\n    const clickUpdateNotesArr = (e) => {\n        let scrollY = e.currentTarget.scrollTop;\n        let offsetTop = e.currentTarget.getBoundingClientRect().top;\n        let offsetLeft = e.currentTarget.getBoundingClientRect().left;\n        let clickLeft = e.pageX;\n        let clickTop = e.pageY;\n        \n        let leftCoord = clickLeft - offsetLeft;\n        let topCoord = scrollY + clickTop - offsetTop;\n\n        let xCoord = noteCt - Math.floor((svgWidth - leftCoord) / datumSize);\n        let yCoord = 1 + Math.floor((svgHeight - topCoord) / datumSize);\n        let clickNoteObj = {x: xCoord, y: yCoord, weight: 1};\n\n        // check if note exists (setting up var for conditions)\n        let newNotesArr = notesArr.filter((noteObj) => {\n            return !(\n                (clickNoteObj['x']      === noteObj['x']) &&\n                (clickNoteObj['y']      === noteObj['y']) &&\n                (clickNoteObj['weight'] === noteObj['weight'])\n            )\n        })\n        // check if note exists (bool statement)\n        newNotesArr.length === notesArr.length && newNotesArr.push(clickNoteObj);\n        setNotesArr(() => {return [...newNotesArr]});\n    }\n\n    // functions\n    const renderCircles = () => {\n        canvasObj.selectAll('circle').remove()\n        const circles = canvasObj.selectAll('circle')\n            .data(notesArr)\n            .enter()\n            .append('circle');\n        circles.attr('cx', (d) => {return scaleObj['xScale'](d['x'])})\n            .attr('cy', (d) => {return scaleObj['yScale'](d['y'])})\n            .attr('r', () => {return (datumSize - 10)/2})\n            .attr('fill', 'orange')\n            .attr('stroke', (d) => {return `rgba(${(scaleObj['colorXScale'](d['x']) + scaleObj['colorYScale'](d['y'])) / 2}, 0, 0, ${d['weight']*(1/2)})`})\n            .attr('stroke-width' , (d) => {return 10});\n        setCanvasObj(() => {return canvasObj});\n    }\n\n    const setScales = () => {\n        scaleObj['xScale'] = d3.scaleLinear()\n            .domain([1, noteCt])\n            .range([1 + 7, svgWidth - 7]);\n        scaleObj['yScale'] = d3.scaleLinear()\n            .domain([1, pitchCt])\n            .range([svgHeight, 1]);\n        scaleObj['colorXScale'] = d3.scaleLinear()\n            .domain([0, d3.max(notesArr, (d) => {return d['x']})])\n            .range([100, 101]);\n        scaleObj['colorYScale'] = d3.scaleLinear()\n            .domain([0, d3.max(notesArr, (d) => {return d['y']})])\n            .range([100, 101]);\n    }\n\n    const renderAxes = (_canvasElem_) => {\n        _canvasElem_.append('g')\n            .attr('transform', `translate(0,${svgHeight})`)\n            .call(d3.axisBottom(scaleObj['xScale'])\n            .ticks(noteCt));\n        _canvasElem_.append(\"g\")\n            .attr(\"transform\", `translate(0, 0)`)\n            .call(d3.axisLeft(scaleObj['yScale'])\n            .ticks(noteCt));\n    }\n\n    const updateCanvas = () => {\n        renderCircles();\n    }\n\n    const drawCanvas = () => {\n        const svgCanvas = d3.select(`#${idStr}`)\n            .append(\"svg\")\n            .attr(\"class\", \"canvas\")\n            // .attr(\"class\", \"canvas\")\n            .attr(\"width\", svgWidth)\n            .attr(\"height\", svgHeight);\n        setScales(scaleObj);\n        renderAxes(svgCanvas, scaleObj);\n        setCanvasObj(() => {return svgCanvas});\n    }\n    const reDrawCanvas = () => {\n        d3.select(`.canvas`).remove()\n        // drawCanvas()\n        setCanvasObj(() => {return undefined})\n    }\n    // const reDrawCircles = () => {\n    //     d3.select(`#${idStr}`).selectAll('*').remove()\n    // }\n    // effects\n    // when notes array or url updates\n    useEffect(()=>{\n        setNotesArr(() => {return [...newNotes]});\n        canvasObj && reDrawCanvas()\n    }, [document.location.pathname])\n    useEffect(()=>{\n        if (!canvasObj) {drawCanvas()}\n        else {updateCanvas()}\n    }, [canvasObj, notesArr])\n\n    // when save is triggered\n    useEffect(()=>{\n        console.log('also saving here')\n        contentArr[instrumentArrIdx]['midi']['pianoRoll']['notes'] = notesArr;\n        // console.log('\\n in INSTRUMENTCANVAS useeffect (before) ');\n        // console.log('saving the notes array (before)');\n        // console.log(contentArr[instrumentArrIdx]['midi']['pianoRoll']['notes']);\n        // console.log('saving the notes array (after)');\n        canvasObj && updateProjectObjContent(contentArr);\n    }, [save])\n    // useEffect(() => {\n    //     console.log('hey its updating', document.location.pathname);\n    //     console.log(contentObj)\n    // },[])\n    // start\n    // https://www.codingame.com/playgrounds/3387/scales-and-axes-in-d3\n    return(\n        <div className=\"InstrumentCanvas\" onClick={(e) => {clickUpdateNotesArr(e)}} >\n            <div className=\"canvas-container\" id={idStr} ></div>\n        </div>\n    )\n}","// App.js > Main.jsx > ProjectView.jsx > ProjectMain.jsx > InstrumentList.jsx > InstrumentContainer.jsx\n\n// react\nimport React from 'react';\n\n// components\nimport InstrumentHead from './InstrumentHead';\nimport InstrumentCanvas from './InstrumentCanvas';\n\n// start\nexport default function InstrumentContainer({contentObj, instrumentObj, idProps, save}){\n    // destructure props\n    const {name, midi} = instrumentObj;\n    return(\n        <div className=\"InstrumentContainer\">\n            <InstrumentHead name={name} />\n            <InstrumentCanvas contentObj={contentObj} midi={midi} idProps={idProps} save={save} />\n        </div>\n    )\n}","// App.js > Main.jsx > ProjectView.jsx > ProjectMain.jsx > InstrumentList.jsx\n\n// react\nimport React from 'react';\n\n// components\nimport InstrumentContainer from './InstrumentContainer';\n\n// start\nexport default function InstrumentList({contentObj, save}){\n    // state\n\n    // destructuring\n    let instrumentArr = contentObj['contentArr'];\n\n    const buildInstrumentList = (_instrumentArr_) => {\n        let instElemArr = []\n        if (_instrumentArr_) {\n            instElemArr = _instrumentArr_.map((instrumentObj, idx) => {\n                let idProps = {idStr: `${instrumentObj['name']}${idx}`, instrumentArrIdx: idx}\n                return <InstrumentContainer contentObj={contentObj} instrumentObj={instrumentObj} idProps={idProps} save={save} key={`iccc-${idx}`} />\n            })\n        }\n        return instElemArr\n    }\n    return(\n        <div className=\"InstrumentList\">\n            {buildInstrumentList(instrumentArr)}\n        </div>\n    )\n}","// App.js > Main.jsx > ProjectView.jsx > ProjectMain.jsx\n\n// react\nimport React from 'react';\n\n// components\nimport InstrumentList from '../instrument/InstrumentList';\n\n// modules\n\n// start\nexport default function ProjectMain({loggedIn, projectMainProps, save}){\n    // state\n\n    // destructuring variables\n    let contentArr = projectMainProps['projectMainObj']['content'];\n    let projectName = projectMainProps['projectMainObj']['name'];\n    let updateProjectObjContent = projectMainProps['updateProjectObjContent'];\n\n    // render fxns\n    // const buildTransport = () => {}\n    return(\n        <div className=\"ProjectMain\">\n            <InstrumentList loggedIn={loggedIn} contentObj={{contentArr, projectName, updateProjectObjContent}} save={save} />\n        </div>\n    )\n}","export const initProject = (currentUsername, currentUserId) => {\n    const initObj = {\n        content: [\n            {\n                midi: {\n                    bpm: 128,\n                    pianoRoll: {\n                        automation: [],\n                        notes: [\n                            // {x: 1, y: 20, weight:1},\n                            // {x: 3, y: 22, weight:1},\n                        ],\n                    },\n                    timeSig: '4/4',\n                },\n                name: 'Piano',\n            },\n        ],\n        name: \"New Project\",\n        user: {\n            username: currentUsername,\n            id: currentUserId,\n        },\n        collaborators: [],\n\n    }\n    return initObj\n}","// App.js > Main.jsx > ProjectView.jsx\n// ROUTE FROM App.js > Nav.jsx {}\n// ROUTE FROM App.js > Main.jsx > ProjectList.jsx > ProjectListElem.jsx {}\n// ROUTE FROM App.js > Main.jsx > UserView.jsx {}\n\n// react\nimport React, {useState, useEffect} from 'react';\n\n// components\n// import CommentList from '../comment/CommentList';\nimport ProjectNav from './ProjectNav';\nimport ProjectMain from './ProjectMain';\n\n// modules\n\n// util\nimport {GetJSON} from '../../util/djangoRequest';\nimport {getLsObj} from '../../util/localstorage';\nimport {initProject} from '../../util/initProject';\n\n// start\nexport default function ProjectView({loggedIn, props}){\n    // destructuring variables\n    const {params} = props['match'];\n    const {state} = props['location'];\n\n    // global variables\n    const projectSlug = params['project_slug'];\n    const projectUsername = params['username'];\n    const currentUsername = getLsObj()['username'];\n    const currentUserId = getLsObj()['user_id'];\n    \n    // state\n    const [save, setSave] = useState(false);\n    const [projectObj, setProjectObj] = useState();\n    const [projectNavObj, setProjectNavObj] = useState();\n    const [projectMainObj, setProjectMainObj] = useState();\n    \n    const resourceId = `${projectUsername}-${projectSlug}`;\n\n    // fxns\n    const updateProjectObjContent = (newContentArr) => {\n        setProjectObj(() => {return {...projectObj, content: newContentArr}})\n    }\n    const setAllProjectObjects = (_json_) => {\n        if (!_json_) {\n            _json_ = projectObj;\n            _json_['user'] = {username:currentUsername, userId:currentUserId}\n        }\n        let newProjectNavObj = {\n            user: _json_['user'],\n            name: _json_['name'],\n            project_slug: _json_['project_slug'],\n            collaborators: _json_['collaborators'],\n        }\n        let newProjectMainObj = {\n            name: _json_['name'],\n            content: _json_['content'],\n        }\n        setProjectNavObj(() => {return {...newProjectNavObj}})\n        setProjectMainObj(() => {return {...newProjectMainObj}})\n    }\n    \n    // effect\n    useEffect(() => {\n        const requestProjectById = async () => {\n            let url = `/api/project/${resourceId}/`;\n            try {\n                let resJson = await GetJSON(url);\n                resJson && setAllProjectObjects(resJson);\n                setProjectObj(() => {return {...resJson}});\n            } catch (e) {\n                console.log(e, '\\n', e.message)\n                alert(\"Error in ProjectView: requesting\", url, e)\n            }\n        }\n        if (document.location.pathname === '/project/active/') {\n            const newProject = initProject(currentUsername, currentUserId)\n            setProjectObj(() => {return {...newProject}})\n            setAllProjectObjects(newProject)\n        } else {\n            requestProjectById()\n        }\n    }, [document.location.pathname])\n    return(\n        <div className=\"ProjectView\">\n            {projectObj && <ProjectNav loggedIn={loggedIn} projectNavProps={{projectObj, projectSlug}} saveProps={{save, setSave}} currentUsername={currentUsername} />}\n            {projectObj && <ProjectMain loggedIn={loggedIn} projectMainProps={{projectMainObj, updateProjectObjContent}} save={save} currentUsername={currentUsername} />}\n            {/* <CommentList /> */}\n        </div>\n    )\n}\n","// App.js > Main.jsx > UserView.jsx\n// ROUTE FROM App.js > Main.jsx > ProjectList.jsx > ProjectListElem.jsx\n// ROUTE FROM App.js > Main.jsx > ProjectView.jsx > ProjectNav.jsx {}\n// ROUTE FROM App.js > ProjectList.jsx > ProjectListElem.jsx > ProjectCollaboratorCard.jsx {}\n\n// react\nimport React, {useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\n\n// modules\n\n// util\nimport {GetJSON} from '../../util/djangoRequest';\n\n// components\n// import x from '.'\n\n// start\nexport default function UserView({loggedIn, props}){\n    // state\n    const [userObj, setUserObj] = useState({});\n\n    // destructure\n    const {params} = props['match'];\n\n    // global vars\n    const username = params['username'];\n\n    // fxns\n    const renderProjectsArr = () => {\n        let projectsArr = userObj['project'];\n        let projectElemsArr = projectsArr.map((projectObj, idx) => {\n            // destructuring\n            console.log(projectObj)\n            let {name, user, project_slug, resource_id, created_dt, updated_dt, collaborators} = projectObj;\n            return(\n                <div className=\"project-info\" key={`uvpa-${idx}`} >\n                    <Link to={`/${user['username']}/${project_slug}/`} >\n                        <div className=\"project-name\" >{name}</div>\n                    </Link>\n                    <div className=\"collaborator-ct\">{`${collaborators.length} collaborator${collaborators.length > 1 ? 's':''}`}</div>\n                    <div className=\"dt-created\">{created_dt}</div>\n                </div>\n            )\n        })\n        return <div className=\"project-list\" >{projectElemsArr}</div>\n    }\n\n    // effects\n    useEffect(()=>{\n        const requestUserByUsername = async () => {\n            let url = `/api/user/${username}/`;\n            let resJSON = await GetJSON(url);\n            setUserObj(() => {return {...resJSON}})\n        }\n        requestUserByUsername()\n    }, [username])\n\n    return(\n        <div className=\"UserView\">\n            <div className=\"right-side\">\n                <div className=\"profile-picture\"><img src={userObj['profile_picture']} alt='Profile Pictire'/></div>\n                <div className=\"name\">\n                    <div className=\"first-name\">{userObj['first_name']}</div>\n                    <div className=\"last-name\">{userObj['last_name']}</div>\n                </div>\n                <div className=\"username\">{userObj['username']}</div>\n                <div className=\"contact-info\">\n                    {/* <div className=\"phone\">{userObj['phone']}</div>\n                    <div className=\"email\">{userObj['email']}</div>\n                    <div className=\"address\">{userObj['address']}</div> */}\n                </div>\n            </div>\n            \n            {userObj['project'] && renderProjectsArr()}\n        </div>\n    )\n}","// ROUTE App.js > Main.jsx > UserCreateForm.jsx\n\n// react\nimport React, {useState, useEffect} from 'react';\nimport {Redirect} from 'react-router-dom';\n\n// modules\n\n// components\n// import x from '.'\n\n// util\nimport {setLsByKey} from '../../util/localstorage';\nimport {Post, PostJSON} from '../../util/djangoRequest';\n\n// start\nexport default function UserCreateForm({loginObj}){\n    console.log('USERCREAETEFORM');\n    // destructuring\n    const {loggedIn} = loginObj;\n\n    // state\n    const [username, setUsername] = useState('');\n\n    // event handlers\n    const onSubmitLogin = async (e, data) => {\n        let url = '/api/auth/login/';\n        let resJSON;\n        if (data) {\n            setUsername(() => data['username'])\n            resJSON = await PostJSON(url, data)\n        } else {\n            e.preventDefault();\n            let usernameValue, passwordValue;\n            let formElem = e.target\n            for (let idx = 0; idx < formElem.length; idx++) {\n                const formInput = formElem[idx];\n                if ((formInput.name) && (formInput.name === 'username')) {\n                    usernameValue = formInput.value;\n                } else if ((formInput.name) && (formInput.name === 'password')) {\n                    passwordValue = formInput.value;\n                }\n            }\n            usernameValue && setUsername(() => usernameValue)\n            if (usernameValue && passwordValue) {\n                data = {username: usernameValue, password: passwordValue};\n                resJSON = await PostJSON(url, data)\n            } else {\n                let msg;\n                if (!usernameValue && !passwordValue) {msg = 'username and password fields'}\n                else if (!usernameValue) {msg = 'username field'}\n                else if (!passwordValue) {msg = 'password field'}\n                alert(`Please enter ${msg}.`)\n                return\n            }\n        }\n        setLsByKey('diffuse_jwt', resJSON['token'])\n    }\n    const onSubmitSignup = async (e) => {\n        e.preventDefault();\n        let formElemArr = e.target;\n        let data = {};\n        for (let idx = 0; idx < formElemArr.length; idx++) {\n            const formElem = formElemArr[idx];\n            let key = formElem['name'];\n            data[key] = formElem['value']\n            console.log(key, data[key])\n        }\n        \n        let url = `/api/user/`\n        let resJSON = await PostJSON(url, data);\n        console.log(resJSON)\n        console.log(resJSON)\n        if (true){}\n        else {\n            onSubmitLogin(e)\n        }\n    }\n\n    // effects\n    useEffect(()=>{\n        console.log('returning redirect in the useeffect!', `loggenin = ${loggedIn}`);\n        return <Redirect to={`/${username}/`} />;\n    }, [loggedIn, username])\n\n    // render fxns\n    const buildInput = (type, name, placeholder) => {\n        if (name === 'phone') {\n            return <input onChange={(e) => {console.log(e.target.value)}} type={type} name={name} className={name} placeholder={placeholder} />\n        } else {\n            return(\n                <input type={type} name={name} className={name} placeholder={placeholder} />\n            )\n        }\n    }\n    const buildUserForm = () => {\n        return(\n            <form onSubmit={(e) => onSubmitSignup(e)} className=\"user-form\">\n                <div className=\"part-1\">\n                    {buildInput('email', 'email', 'Email')}\n                    {buildInput('text', 'username', 'Userame')}\n                    {buildInput('password', 'password', 'Password')}\n                </div>\n                <div className=\"part-2\">\n                    {buildInput('text', 'firstname', 'First Name')}\n                    {buildInput('text', 'lastname', 'Last Name')}\n                    {buildInput('phone', 'phone', 'Phone')}\n                    {buildInput('date', 'dob', 'Birthdate')}\n                </div>\n                <div className='part-3'>\n                    {buildInput('url', 'profilepicture', 'Profile Picture')}\n                </div>\n                {buildInput('submit', 'submit', 'Submit')}\n            </form>\n        )\n    }\n    return(\n        <div className=\"UserCreateForm\" >\n            <div className=\"title\">Register</div>\n            {buildUserForm()}\n        </div>\n    )\n}","// ROUTE App.js > Main.jsx > UserLogin.jsx\n\n// react\nimport React, {useState} from 'react';\nimport {Redirect, Link} from 'react-router-dom';\n\n// components\n\n// util\nimport {setLsByKey} from '../../util/localstorage';\nimport {Post} from '../../util/djangoRequest';\n// import {getCookieByKey} from '../../util/cookies';\n\n// start\nexport default function UserLogin({loginObj}) {\n\n    // destructuring\n    const {loggedIn, setLoggedIn} = loginObj;\n\n    // state\n    const [usernameState, setUsernameState] = useState();\n    // const [loginError, setLoginError] = useState({});\n\n    // utility fxns\n    \n    // event handlers\n    const onSubmitLogin = async (e) => {\n        e.preventDefault();\n        let username, password, userId;\n        let formElem = e.target\n        for (let idx = 0; idx < formElem.length; idx++) {\n            const formInput = formElem[idx];\n            if ((formInput.name) && (formInput.name === 'username')) {\n                username = formInput.value;\n            } else if ((formInput.name) && (formInput.name === 'password')) {\n                password = formInput.value;\n            }\n        }\n        username && setUsernameState(() => username)\n        if (username && password) {\n            let url = '/api/auth/login/';\n            try {\n                let body = JSON.stringify({username, password});\n                let response = await Post(url, body);\n                let resJson = await response.json();\n\n                // manage the response\n                let httpStatus = response.status;\n                let jwt = resJson['token'];\n                let userId = resJson['user']['pk'];\n\n                // handle error code\n                if ([403].includes(httpStatus)) {\n                    alert('something went wrong, 403 status')\n                } else {\n                    setLsByKey('diffuse_jwt', jwt);\n                    setLsByKey('username', username);\n                    setLsByKey('user_id', userId);\n                    setLoggedIn(() => true);\n                    console.log('logged in!')\n                }\n            } catch (e) {\n                let errorStatus = e.status;\n                // setLoginError(()=>{return {...e}})\n                console.log('\\n\\nerror (below)\\n\\n', errorStatus, e)\n                for (let i in e) {\n                    console.log(i, e[i]);\n                }\n                console.log('error (above)\\n\\n')\n            }\n        } else {\n            let msg;\n            if (!username && !password) {msg = 'username and password fields'}\n            else if (!username) {msg = 'username field'}\n            else if (!password) {msg = 'password field'}\n            alert(`Please enter ${msg}.`)\n        }\n    }\n\n    // render functions\n    return(\n        loggedIn && !!(usernameState) ? <Redirect to={`/${usernameState}/`} /> :\n        <div className=\"UserLogin\">\n            <form onSubmit={(e) => onSubmitLogin(e)} className=\"login\">\n                <input name='username' type=\"text\" className=\"username\" placeholder=\"Username\" autoFocus />\n                <input name='password' type=\"password\" className=\"password\" placeholder=\"Password\" />\n                <input name='submit' type=\"submit\" className=\"submit\" value=\"Submit\" />\n            </form>\n            <Link to={`/user/new/`} className=\"create-user\">{`New here? Click here to signup`}</Link>\n        </div>\n    )\n    \n}","// App.js > Main.jsx > HistoryView.jsx > CommitCard.jsx\n\n// react\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\n// modules\n\n// components\n\n// seed\n// import {seedProfile, projectArr, historyArr, commitArr, commentArr} from '../../seed/seed';\n\n// start\nexport default function CommitCard({commitObj, projectId}){\n    // destructuring\n    let username;\n    const {name, author, commitId} = commitObj;\n    console.log('commitcard projectObj')\n    console.log(commitObj['name'])\n    console.log(commitObj['author'])\n    console.log(commitObj['midi'])\n    console.log('commitcard projectObj')\n    \n    return(\n        <Link to={{pathname:`/${username}/${projectId}/history/${commitId}`, state:{commitObj}}} >\n            <div className=\"CommitCard\">\n                <div className=\"name\">{name}</div>\n                <div className=\"author\">{author}</div>\n            </div>\n        </Link>\n    )\n}","// App.js > Main.jsx > HistoryView.jsx\n// ROUTE FROM: App.js > Main.jsx > ProjectView.jsx > ProjectNav.jsx {projectObj}\n\n// react\nimport React from 'react';\n\n// modules\n\n// components\nimport CommitCard from './CommitCard';\n\n// start\nexport default function HistoryView({props}){\n    // destructuring\n    const {params, location} = props['match']\n    const historyArr = location['state']['projectObj']['history']\n    const projectId = params['id']\n\n    const buildHistoryArr = () => {\n        let historyElemArr = historyArr.map((commitObj, idx) => {\n            return <CommitCard commitObj={{...commitObj, commitId:idx}} projectId={projectId} key={`har-${idx}`} />\n        })\n        return historyElemArr\n    }\n    return(\n        <div className=\"HistoryView\">\n            {(historyArr.length > 0) && buildHistoryArr()}\n        </div>\n    )\n}","// App.js > Main.jsx > HistoryView.jsx > CommitCard.jsx > CommitView.jsx\n\n// react\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\n// modules\n\n// components\n\n// seed\n// import {seedProfile, projectArr, historyArr, commitArr, commentArr} from '../../seed/seed';\n\n// start\nexport default function CommitView({props}){\n    // destructuring\n    let commitObj = props['location']['state']['commitObj'];\n    const {name, author, midi} = commitObj;\n    console.log('commitcard projectObj')\n    console.log(commitObj['name'])\n    console.log(commitObj['author'])\n    console.log(commitObj['commitId'])\n    console.log(commitObj['midi'])\n    console.log('commitcard projectObj')\n    \n    return(\n        <Link>\n            <div className=\"CommitView\">\n                <div className=\"name\">{name}</div>\n                <div className=\"author\">{author}</div>\n                <div className=\"midi\">{midi}</div>\n            </div>\n        </Link>\n    )\n}","// App.js > Main.jsx\n\n// react\nimport React from 'react';\nimport {Route, Switch} from 'react-router-dom';\n\n// components\nimport About from './About';\n// project\nimport ProjectList from './project/ProjectList';\nimport ProjectView from './project/ProjectView';\n// user\nimport UserList from './user/UserList';\nimport UserView from './user/UserView';\nimport UserCreateForm from './user/UserCreateForm';\nimport UserLogin from './user/UserLogin';\n// history\nimport HistoryView from './history/HistoryView';\nimport CommitView from './history/CommitView';\n\n// start\nexport default function Main({loginObj, lsObj}){\n    // destructuring\n    const {loggedIn, setLoggedIn} = loginObj;\n    const {username} = lsObj;\n\n    // state\n\n    return(\n        <div className=\"Main\">\n            <Switch>\n                <Route exact path=\"/project/active/\" render={(props) => <ProjectView loggedIn={loggedIn} props={props} />} />\n                <Route exact path=\"/login/\" render={() => <UserLogin loginObj={{loggedIn, setLoggedIn}} username={username} />} />\n                <Route exact path=\"/new/\" render={() => <UserCreateForm loginObj={{loggedIn, setLoggedIn}} />} />\n                <Route exact path=\"/users/\" render={(props) => <UserList loggedIn={loggedIn} props={props} />} />\n                <Route exact path=\"/projects/recent/\" render={() => <ProjectList loggedIn={loggedIn} />} />\n                <Route exact path=\"/feed/\" render={() => <ProjectList loggedIn={loggedIn} />} />\n\n                <Route exact path=\"/:username/:project_slug/history/:commitId/\" render={(props) => <CommitView props={props} />} />\n                <Route exact path=\"/:username/:project_slug/history/\" render={(props) => <HistoryView props={props} />} />\n                \n                <Route exact path=\"/:username/:project_slug/\" render={(props) => <ProjectView props={props} />} />\n                <Route exact path=\"/:username/\" render={(props) => <UserView loggedIn={loggedIn} props={props} username={username} />} />\n                <Route exact path=\"/\" component={About} />\n            </Switch>\n        </div>\n    )\n}","// App.js > SidebarRight.jsx > ProjectSidebar.jsx\n\n// react\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\n// components\n\n// start\nexport default function ProjectSidebar(){\n    const addInstrumentDropdown = () => {\n        let instrumentBankArr = []\n        return(\n            <div className=\"instrument-dropdown\">\n                {instrumentBankArr}\n            </div>\n        )\n    }\n    let {pathname} = document['location'];\n    let sidebarElemArr = [];\n    if (pathname && pathname === '/project/active/'){\n        sidebarElemArr.push(\n            <div className=\"add-instrument\" onClick={() => {addInstrumentDropdown()}} key={`psbr`} >Add Instrument</div>\n        );\n    }\n    return(\n        <div className=\"ProjectSidebar fade-in\">\n            {sidebarElemArr}\n        </div>\n    )\n}","// App.js > SidebarLeft.jsx\n\n// react\nimport React from 'react';\n\n// components\nimport ProjectSidebar from './sidebar/ProjectSidebar';\n\n// start\nexport default function SidebarLeft({loggedIn}){\n    return(\n        <div className=\"SidebarLeft\">\n            {loggedIn && <ProjectSidebar />}\n        </div>\n    )\n}","// App.js > SidebarRight.jsx\n\n// react\nimport React from 'react';\n\n// components\n\n// start\nexport default function SidebarRight({loggedIn}){\n    return(\n        <div className=\"SidebarRight\">\n        </div>\n    )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// App.js\n\n// react\nimport React, {useState, useEffect} from 'react';\nimport {BrowserRouter} from 'react-router-dom';\n\n// modules\n\n// stylin\nimport './App.css';\n\n// components\nimport Nav from './components/Nav';\nimport Main from './components/Main';\nimport SidebarLeft from './components/SidebarLeft'\nimport SidebarRight from './components/SidebarRight'\n\n// util\nimport {getLsObj} from './util/localstorage';\nimport {GetJSON} from './util/djangoRequest';\n\n// start\nexport default function App() {\n\tlet initLsObj = getLsObj()\n\n\t// state\n\tconst [loggedIn, setLoggedIn] = useState(false);\n\tconst [lsObj, setLsObj] = useState(initLsObj);\n\n\t// utility functions\n\tconst checkLsObj = () => {\n\t\tlet _lsObj_ = getLsObj();\n\t\tsetLsObj(() => {return {..._lsObj_}})\n\t}\n\t\n\t// effects\n\tuseEffect(() => {\n\t\tconst checkLoggedIn = async () => {\n\t\t\tlet jwt = lsObj['diffuse_jwt'];\n\t\t\tif (jwt) {\n\t\t\t\ttry {\n\t\t\t\t\tlet resJSON = await GetJSON('/api/user/johnnyadams/')\n\t\t\t\t\tif (resJSON && jwt) {\n\t\t\t\t\t\tsetLoggedIn(() => true)\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.log(e)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcheckLoggedIn()\n\t}, [lsObj])\n\tuseEffect(()=>{\n\t\tcheckLsObj()\n\t}, [loggedIn])\n\t\n  \treturn (\n\t\t<BrowserRouter>\n\t\t\t<div className=\"App\">\n\t\t\t\t<Nav loginObj={{loggedIn, setLoggedIn}} lsObj={lsObj} checkLsObj={checkLsObj} />\n\t\t\t\t<SidebarLeft loggedIn={loggedIn} />\n\t\t\t\t<Main loginObj={{loggedIn, setLoggedIn}} lsObj={lsObj} />\n\t\t\t\t<SidebarRight />\n\t\t\t</div>\n\t\t</BrowserRouter>\n  \t)\n}"],"sourceRoot":""}